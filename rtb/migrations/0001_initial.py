# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-06-24 05:32
from __future__ import unicode_literals

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Advertiser',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('fetch_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('code', models.TextField(blank=True, db_index=True, null=True)),
                ('name', models.TextField(blank=True, db_index=True, null=True)),
                ('state', models.TextField(blank=True, choices=[(b'active', b'Active'), (b'inactive', b'Inactive')], null=True)),
                ('remarketing_segment_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('lifetime_budget', models.FloatField(blank=True, null=True)),
                ('lifetime_budget_imps', models.IntegerField(blank=True, null=True)),
                ('daily_budget', models.FloatField(blank=True, null=True)),
                ('daily_budget_imps', models.IntegerField(blank=True, null=True)),
                ('enable_pacing', models.NullBooleanField()),
                ('allow_safety_pacing', models.NullBooleanField()),
                ('profile_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('control_pct', models.FloatField(blank=True, null=True)),
                ('timezone', models.TextField(blank=True, null=True)),
                ('last_modified', models.DateTimeField(blank=True, null=True)),
                ('billing_name', models.TextField(blank=True, null=True)),
                ('billing_phone', models.TextField(blank=True, null=True)),
                ('billing_address1', models.TextField(blank=True, null=True)),
                ('billing_address2', models.TextField(blank=True, null=True)),
                ('billing_city', models.TextField(blank=True, null=True)),
                ('billing_state', models.TextField(blank=True, null=True)),
                ('billing_country', models.TextField(blank=True, null=True)),
                ('billing_zip', models.TextField(blank=True, null=True)),
                ('default_currency', models.TextField(blank=True, null=True)),
                ('default_category', models.TextField(blank=True, null=True)),
                ('use_insertion_orders', models.NullBooleanField()),
                ('time_format', models.TextField(blank=True, choices=[(b'12', b'12-Hour'), (b'24', b'24-Hour')], default=b'12', null=True)),
                ('default_brand_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('is_mediated', models.NullBooleanField()),
                ('is_malicious', models.NullBooleanField()),
            ],
            options={
                'db_table': 'advertiser',
            },
        ),
        migrations.CreateModel(
            name='AdvertiserBrand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('advertiser', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Advertiser')),
            ],
            options={
                'db_table': 'advertiser_brand',
            },
        ),
        migrations.CreateModel(
            name='AdvertiserCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('advertiser', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Advertiser')),
            ],
            options={
                'db_table': 'advertiser_category',
            },
        ),
        migrations.CreateModel(
            name='AdvertiserLabel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.TextField(blank=True, null=True)),
                ('advertiser', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Advertiser')),
            ],
            options={
                'db_table': 'advertiser_label',
            },
        ),
        migrations.CreateModel(
            name='AdvertiserThirdpartyPixel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('advertiser', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Advertiser')),
            ],
            options={
                'db_table': 'advertiser_thirdparty_pixel',
            },
        ),
        migrations.CreateModel(
            name='AllowedSegments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'allowed_segments',
            },
        ),
        migrations.CreateModel(
            name='API_Campaign',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('fetch_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('code', models.IntegerField(blank=True, null=True)),
                ('pixel_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('optimization_version', models.TextField(blank=True, null=True)),
                ('profile_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('lifetime_budget_imps', models.IntegerField(blank=True, null=True)),
                ('inventory_type', models.TextField(blank=True, null=True)),
                ('lifetime_budget', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('click_url', models.TextField(blank=True, null=True)),
                ('bid_modifier_model', models.TextField(blank=True, null=True)),
                ('enable_pacing', models.NullBooleanField()),
                ('allow_safety_pacing', models.NullBooleanField()),
                ('timezone', models.TextField(blank=True, null=True)),
                ('cpc_goal', models.FloatField(blank=True, null=True)),
                ('optimization_lookback', models.TextField(blank=True, null=True)),
                ('line_item_id', models.IntegerField(blank=True, null=True)),
                ('bid_model', models.TextField(blank=True, null=True)),
                ('lifetime_pacing_pct', models.IntegerField(blank=True, null=True)),
                ('campaign_type', models.IntegerField(blank=True, null=True)),
                ('defer_to_li_prediction', models.IntegerField(blank=True, null=True)),
                ('impression_limit', models.IntegerField(blank=True, null=True)),
                ('short_name', models.IntegerField(blank=True, null=True)),
                ('cadence_modifier_enabled', models.IntegerField(blank=True, null=True)),
                ('creative_id', models.IntegerField(blank=True, null=True)),
                ('min_bid', models.IntegerField(blank=True, null=True)),
                ('roadblock_type', models.IntegerField(blank=True, null=True)),
                ('comments', models.IntegerField(blank=True, null=True)),
                ('priority', models.IntegerField(blank=True, null=True)),
                ('roadblock_creatives', models.IntegerField(blank=True, null=True)),
                ('state', models.IntegerField(blank=True, null=True)),
                ('max_learn_bid', models.IntegerField(blank=True, null=True)),
                ('allow_unverified_ecp', models.IntegerField(blank=True, null=True)),
                ('require_cookie_for_tracking', models.IntegerField(blank=True, null=True)),
                ('supply_type', models.IntegerField(blank=True, null=True)),
                ('start_date', models.IntegerField(blank=True, null=True)),
                ('bid_multiplier', models.IntegerField(blank=True, null=True)),
                ('daily_budget_imps', models.IntegerField(blank=True, null=True)),
                ('labels', models.IntegerField(blank=True, null=True)),
                ('base_cpm_bid_value', models.IntegerField(blank=True, null=True)),
                ('end_date', models.IntegerField(blank=True, null=True)),
                ('learn_override_type', models.IntegerField(blank=True, null=True)),
                ('valuation', models.IntegerField(blank=True, null=True)),
                ('cpm_bid_type', models.IntegerField(blank=True, null=True)),
                ('ecp_learn_divisor', models.IntegerField(blank=True, null=True)),
                ('creatives', models.IntegerField(blank=True, null=True)),
                ('last_modified', models.IntegerField(blank=True, null=True)),
                ('campaign_modifiers', models.IntegerField(blank=True, null=True)),
                ('creative_distribution_type', models.IntegerField(blank=True, null=True)),
                ('broker_fees', models.IntegerField(blank=True, null=True)),
                ('lifetime_pacing', models.IntegerField(blank=True, null=True)),
                ('remaining_days', models.IntegerField(blank=True, null=True)),
                ('pixels', models.IntegerField(blank=True, null=True)),
                ('supply_type_action', models.IntegerField(blank=True, null=True)),
                ('name', models.IntegerField(blank=True, null=True)),
                ('daily_budget', models.IntegerField(blank=True, null=True)),
                ('learn_threshold', models.IntegerField(blank=True, null=True)),
                ('base_bid', models.IntegerField(blank=True, null=True)),
                ('bid_margin', models.IntegerField(blank=True, null=True)),
                ('max_bid', models.IntegerField(blank=True, null=True)),
                ('cadence_type', models.IntegerField(blank=True, null=True)),
                ('projected_learn_events', models.IntegerField(blank=True, null=True)),
                ('total_days', models.IntegerField(blank=True, null=True)),
                ('lifetime_pacing_span', models.IntegerField(blank=True, null=True)),
                ('cpc_payout', models.IntegerField(blank=True, null=True)),
                ('advertiser', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Advertiser')),
            ],
            options={
                'db_table': 'api_campaign',
            },
        ),
        migrations.CreateModel(
            name='API_SiteDomainPerformanceReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fetch_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('day', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('site_domain', models.TextField(blank=True, db_index=True, null=True)),
                ('line_item_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('top_level_category_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('second_level_category_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('deal_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('buyer_member_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('operating_system_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('supply_type', models.TextField(blank=True, choices=[(b'web', b'web'), (b'mobile_app', b'mobile_app'), (b'mobile_web', b'mobile_web')], null=True)),
                ('mobile_application_id', models.TextField(blank=True, db_index=True, null=True)),
                ('mobile_application_name', models.TextField(blank=True, db_index=True, null=True)),
                ('mobile_application', models.TextField(blank=True, db_index=True, null=True)),
                ('fold_position', models.TextField(blank=True, choices=[(b'0', b'unknown'), (b'1', b'above'), (b'2', b'below'), (b'11', b'Top FB Ad Slot'), (b'12', b'2nd FB Ad Slot'), (b'13', b'3nd FB Ad Slot'), (b'14', b'4nd FB Ad Slot'), (b'15', b'5nd FB Ad Slot'), (b'16', b'6nd FB Ad Slot'), (b'17', b'7nd FB Ad Slot'), (b'18', b'8nd FB Ad Slot'), (b'19', b'9nd FB Ad Slot'), (b'20', b'10nd FB Ad Slot')], null=True)),
                ('age_bucket', models.TextField(blank=True, choices=[(b'0', b'unknown'), (b'1', b'13-17'), (b'2', b'18-24'), (b'3', b'25-34'), (b'4', b'35-44'), (b'5', b'45-54'), (b'6', b'55-64'), (b'7', b'65+')], null=True)),
                ('gender', models.TextField(blank=True, choices=[(b'm', b'm'), (b'f', b'f'), (b'u', b'u')], null=True)),
                ('is_remarketing', models.IntegerField(blank=True, null=True)),
                ('conversion_pixel_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('booked_revenue', models.DecimalField(decimal_places=10, max_digits=35)),
                ('clicks', models.IntegerField(blank=True, null=True)),
                ('click_thru_pct', models.FloatField(blank=True, null=True)),
                ('convs_per_mm', models.FloatField(blank=True, null=True)),
                ('convs_rate', models.FloatField(blank=True, null=True)),
                ('cost_ecpa', models.DecimalField(decimal_places=10, max_digits=35)),
                ('cost_ecpc', models.DecimalField(decimal_places=10, max_digits=35)),
                ('cpm', models.DecimalField(decimal_places=10, max_digits=35)),
                ('ctr', models.FloatField(blank=True, null=True)),
                ('imps', models.IntegerField(blank=True, null=True)),
                ('media_cost', models.DecimalField(decimal_places=10, max_digits=35)),
                ('post_click_convs', models.IntegerField(blank=True, null=True)),
                ('post_click_convs_rate', models.FloatField(blank=True, null=True)),
                ('post_view_convs', models.IntegerField(blank=True, null=True)),
                ('post_view_convs_rate', models.FloatField(blank=True, null=True)),
                ('profit', models.DecimalField(decimal_places=10, max_digits=35)),
                ('profit_ecpm', models.DecimalField(decimal_places=10, max_digits=35)),
                ('imps_viewed', models.IntegerField(blank=True, null=True)),
                ('view_measured_imps', models.IntegerField(blank=True, null=True)),
                ('view_rate', models.FloatField(blank=True, null=True)),
                ('view_measurement_rate', models.FloatField(blank=True, null=True)),
                ('advertiser', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Advertiser')),
                ('campaign', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.API_Campaign')),
            ],
            options={
                'db_table': 'api_site_domain_performance_report',
            },
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, db_index=True, null=True)),
                ('urls', models.TextField(blank=True, db_index=True, null=True)),
                ('is_premium', models.NullBooleanField()),
                ('company_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('num_creatives', models.IntegerField(blank=True, null=True)),
                ('last_modified', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'brand',
            },
        ),
        migrations.CreateModel(
            name='BrandInCountry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Brand')),
            ],
            options={
                'db_table': 'brand_in_country',
            },
        ),
        migrations.CreateModel(
            name='Campaign',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('fetch_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('state', models.TextField(blank=True, choices=[(b'active', b'Active'), (b'inactive', b'Inactive')], null=True)),
                ('parent_inactive', models.NullBooleanField()),
                ('code', models.TextField(blank=True, db_index=True, null=True)),
                ('name', models.TextField(blank=True, db_index=True, null=True)),
                ('short_name', models.TextField(blank=True, db_index=True, null=True)),
                ('start_date', models.DateTimeField(db_index=True)),
                ('end_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('timezone', models.TextField(blank=True, null=True)),
                ('last_modified', models.DateTimeField()),
                ('supply_type', models.TextField(blank=True, null=True)),
                ('supply_type_action', models.TextField(blank=True, null=True)),
                ('inventory_type', models.TextField(blank=True, choices=[(b'real_time', b'real_time'), (b'direct', b'direct'), (b'both', b'both')], null=True)),
                ('roadblock_creatives', models.NullBooleanField()),
                ('roadblock_type', models.TextField(blank=True, choices=[(b'normal_roadblock', b'normal_roadblock'), (b'partial_roadblock', b'partial_roadblock'), (b'exact_roadblock', b'exact_roadblock')], null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('click_url', models.TextField(blank=True, null=True)),
                ('valuation_min_margin_rtb_pct', models.DecimalField(decimal_places=10, max_digits=35, null=True)),
                ('remaining_days_eap_multiplier', models.DecimalField(decimal_places=10, max_digits=35, null=True)),
                ('first_run', models.DateTimeField(blank=True, null=True)),
                ('last_run', models.DateTimeField(blank=True, null=True)),
                ('alerts', models.TextField(blank=True, null=True)),
                ('creative_distribution_type', models.TextField(blank=True, choices=[(b'even', b'even'), (b'weighted', b'weighted'), (b'ctr-optimized', b'ctr-optimized')], null=True)),
                ('weight', models.IntegerField(blank=True, null=True)),
                ('lifetime_budget', models.FloatField(blank=True, null=True)),
                ('lifetime_budget_imps', models.IntegerField(blank=True, null=True)),
                ('daily_budget', models.FloatField(blank=True, null=True)),
                ('daily_budget_imps', models.IntegerField(blank=True, null=True)),
                ('learn_budget', models.FloatField(blank=True, null=True)),
                ('learn_budget_imps', models.IntegerField(blank=True, null=True)),
                ('learn_budget_daily_cap', models.FloatField(blank=True, null=True)),
                ('learn_budget_daily_imps', models.IntegerField(blank=True, null=True)),
                ('enable_pacing', models.NullBooleanField()),
                ('lifetime_pacing', models.NullBooleanField()),
                ('lifetime_pacing_span', models.IntegerField(blank=True, null=True)),
                ('priority', models.IntegerField(blank=True, null=True)),
                ('cadence_modifier_enabled', models.NullBooleanField()),
                ('expected_pacing', models.FloatField(blank=True, null=True)),
                ('total_pacing', models.FloatField(blank=True, null=True)),
                ('has_pacing_dollars', models.IntegerField(blank=True, null=True)),
                ('has_pacing_imps', models.IntegerField(blank=True, null=True)),
                ('imps_pacing_percent', models.IntegerField(blank=True, null=True)),
                ('media_cost_pacing_percent', models.IntegerField(blank=True, null=True)),
                ('cpm_bid_type', models.TextField(blank=True, choices=[(b'base', b'base'), (b'average', b'average'), (b'clearing', b'clearing'), (b'predicted', b'predicted'), (b'margin', b'margin'), (b'custom_model', b'custom_model'), (b'none', b'none')], null=True)),
                ('base_bid', models.FloatField(blank=True, null=True)),
                ('min_bid', models.FloatField(blank=True, null=True)),
                ('max_bid', models.FloatField(blank=True, null=True)),
                ('bid_margin', models.FloatField(blank=True, null=True)),
                ('cpc_goal', models.FloatField(blank=True, null=True)),
                ('bid_model', models.IntegerField(blank=True, db_index=True, null=True)),
                ('learn_threshold', models.IntegerField(blank=True, null=True)),
                ('max_learn_bid', models.FloatField(blank=True, null=True)),
                ('cadence_type', models.TextField(blank=True, choices=[(b'advertiser', b'advertiser'), (b'creative', b'creative')], null=True)),
                ('defer_to_li_prediction', models.NullBooleanField()),
                ('optimization_lookback', models.TextField(blank=True, null=True)),
                ('optimization_version', models.TextField(blank=True, null=True)),
                ('learn_override_type', models.TextField(blank=True, choices=[(b'base_cpm_bid', b'base_cpm_bid'), (b'venue_avg_cpm_bid', b'venue_avg_cpm_bid')], null=True)),
                ('base_cpm_bid_value', models.FloatField(blank=True, null=True)),
                ('bid_multiplier', models.FloatField(blank=True, null=True)),
                ('impression_limit', models.IntegerField(blank=True, null=True)),
                ('campaign_modifiers', models.TextField(blank=True, null=True)),
                ('bid_modifier_model', models.TextField(blank=True, null=True)),
                ('advertiser', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Advertiser')),
            ],
            options={
                'db_table': 'campaign',
            },
        ),
        migrations.CreateModel(
            name='CampaignBrokerFees',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('broker_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('payment_type', models.TextField(blank=True, choices=[(b'cpm', b'cpm'), (b'revshare', b'revshare')], null=True)),
                ('value', models.FloatField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('campaign', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Campaign')),
            ],
            options={
                'db_table': 'campaign_brocker_fees',
            },
        ),
        migrations.CreateModel(
            name='CampaignConversionPixel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('roi_click_goal', models.FloatField(blank=True, null=True)),
                ('roi_view_goal', models.FloatField(blank=True, null=True)),
                ('click_payout', models.FloatField(blank=True, null=True)),
                ('view_payout', models.FloatField(blank=True, null=True)),
                ('campaign', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Campaign')),
            ],
            options={
                'db_table': 'campaign_conversion_pixel',
            },
        ),
        migrations.CreateModel(
            name='CampaignCreative',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('campaign', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Campaign')),
            ],
            options={
                'db_table': 'campaign_creative',
            },
        ),
        migrations.CreateModel(
            name='CampaignLabel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('campaign', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Campaign')),
            ],
            options={
                'db_table': 'campaign_label',
            },
        ),
        migrations.CreateModel(
            name='CampaignLineItems',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('campaign', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Campaign')),
            ],
            options={
                'db_table': 'campaign_line_items',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, db_index=True, null=True)),
                ('is_sensitive', models.NullBooleanField()),
                ('requires_whitelist', models.NullBooleanField()),
                ('requires_whitelist_on_external', models.NullBooleanField()),
                ('last_modified', models.DateTimeField(blank=True, null=True)),
                ('is_brand_eligible', models.NullBooleanField()),
            ],
            options={
                'db_table': 'category',
            },
        ),
        migrations.CreateModel(
            name='ClickTracker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('member_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('name', models.TextField(blank=True, db_index=True, null=True)),
                ('code', models.TextField(blank=True, db_index=True, null=True)),
                ('state', models.TextField(blank=True, choices=[(b'active', b'Active'), (b'inactive', b'Inactive')], null=True)),
                ('click_url', models.TextField(blank=True, db_index=True, null=True)),
                ('payment_rule_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('last_modified', models.DateTimeField()),
                ('advertiser_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Advertiser')),
            ],
            options={
                'db_table': 'click_tracker',
            },
        ),
        migrations.CreateModel(
            name='ClickTrackerPlacement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('click_tracker', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.ClickTracker')),
            ],
            options={
                'db_table': 'click_tracker_placement',
            },
        ),
        migrations.CreateModel(
            name='ContentCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, db_index=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_system', models.NullBooleanField()),
                ('type', models.TextField(blank=True, choices=[(b'standard', b'standard'), (b'standard', b'standard')], null=True)),
                ('last_modified', models.DateTimeField()),
                ('parent_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.ContentCategory')),
            ],
            options={
                'db_table': 'content_category',
            },
        ),
        migrations.CreateModel(
            name='ConversionPixel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.TextField(blank=True, db_index=True, null=True)),
                ('name', models.TextField(blank=True, db_index=True, null=True)),
                ('state', models.TextField(blank=True, choices=[(b'active', b'Active'), (b'inactive', b'Inactive')], null=True)),
                ('trigger_type', models.TextField(blank=True, choices=[(b'view', b'view'), (b'click', b'click'), (b'hybrid', b'hybrid')], null=True)),
                ('min_minutes_per_conv', models.IntegerField(blank=True, null=True)),
                ('post_view_expire_mins', models.IntegerField(blank=True, null=True)),
                ('post_click_expire_mins', models.IntegerField(blank=True, null=True)),
                ('post_click_value', models.FloatField(blank=True, null=True)),
                ('post_view_value', models.FloatField(blank=True, null=True)),
                ('created_on', models.DateTimeField()),
                ('last_modified', models.DateTimeField()),
                ('advertiser', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Advertiser')),
            ],
            options={
                'db_table': 'conversion_pixel',
            },
        ),
        migrations.CreateModel(
            name='ConversionPixelPiggybackPixels',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.TextField(blank=True, null=True)),
                ('pixel_type', models.TextField(blank=True, choices=[(b'js', b'js'), (b'img', b'img')], null=True)),
                ('conversion_pixel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.ConversionPixel')),
            ],
            options={
                'db_table': 'conversion_pixel_piggyback_pixels',
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, db_index=True, null=True)),
                ('code', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'country',
            },
        ),
        migrations.CreateModel(
            name='Creative',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('code', models.TextField(blank=True, db_index=True, null=True)),
                ('code2', models.TextField(blank=True, db_index=True, null=True)),
                ('name', models.TextField(blank=True, db_index=True, null=True)),
                ('type', models.TextField(blank=True, choices=[(b'standard', b'standard'), (b'html', b'html'), (b'video', b'video')], null=True)),
                ('state', models.TextField(blank=True, choices=[(b'active', b'Active'), (b'inactive', b'Inactive')], null=True)),
                ('click_track_result', models.TextField(blank=True, choices=[(b'not_tested', b'not_tested'), (b'passed', b'passed'), (b'failed', b'failed')], null=True)),
                ('custom_macros', models.TextField(blank=True, choices=[(b'not_tested', b'not_tested'), (b'passed', b'passed'), (b'failed', b'failed')], null=True)),
                ('width', models.IntegerField(blank=True, null=True)),
                ('height', models.IntegerField(blank=True, null=True)),
                ('media_url', models.TextField(blank=True, null=True)),
                ('media_url_secure', models.TextField(blank=True, null=True)),
                ('click_url', models.TextField(blank=True, null=True)),
                ('file_name', models.TextField(blank=True, null=True)),
                ('flash_click_variable', models.TextField(blank=True, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('content_secure', models.TextField(blank=True, null=True)),
                ('original_content', models.TextField(blank=True, null=True)),
                ('original_content_secure', models.TextField(blank=True, null=True)),
                ('macros', models.TextField(blank=True, null=True)),
                ('audit_status', models.TextField(blank=True, null=True)),
                ('audit_feedback', models.TextField(blank=True, null=True)),
                ('allow_audit', models.NullBooleanField()),
                ('ssl_status', models.TextField(blank=True, choices=[(b'disabled', b'disabled'), (b'pending', b'pending'), (b'approved', b'approved'), (b'failed', b'failed')], null=True)),
                ('allow_ssl_audit', models.NullBooleanField()),
                ('google_audit_status', models.TextField(blank=True, choices=[(b'approved', b'approved'), (b'rejected', b'rejected'), (b'pending', b'pending')], null=True)),
                ('google_audit_feedback', models.TextField(blank=True, null=True)),
                ('msft_audit_status', models.TextField(blank=True, choices=[(b'approved', b'approved'), (b'rejected', b'rejected'), (b'pending', b'pending')], null=True)),
                ('msft_audit_feedback', models.TextField(blank=True, null=True)),
                ('facebook_audit_status', models.TextField(blank=True, choices=[(b'pending_pre_audit', b'pending_pre_audit'), (b'rejected_by_pre_audit', b'rejected_by_pre_audit'), (b'approved', b'approved'), (b'rejected', b'rejected'), (b'pending', b'pending')], null=True)),
                ('facebook_audit_feedback', models.TextField(blank=True, null=True)),
                ('is_self_audited', models.NullBooleanField()),
                ('is_expired', models.NullBooleanField()),
                ('is_prohibited', models.NullBooleanField()),
                ('is_hosted', models.NullBooleanField()),
                ('lifetime_budget', models.FloatField(blank=True, null=True)),
                ('lifetime_budget_imps', models.IntegerField(blank=True, null=True)),
                ('daily_budget', models.FloatField(blank=True, null=True)),
                ('daily_budget_imps', models.IntegerField(blank=True, null=True)),
                ('enable_pacing', models.NullBooleanField()),
                ('allow_safety_pacing', models.NullBooleanField()),
                ('track_clicks', models.NullBooleanField()),
                ('flash_backup_content', models.TextField(blank=True, null=True)),
                ('flash_backup_file_name', models.TextField(blank=True, null=True)),
                ('flash_backup_url', models.TextField(blank=True, null=True)),
                ('is_control', models.NullBooleanField()),
                ('created_on', models.DateTimeField()),
                ('last_modified', models.DateTimeField()),
                ('creative_upload_status', models.TextField(blank=True, choices=[(b'pending', b'pending'), (b'processing', b'processing'), (b'completed', b'completed'), (b'failed', b'failed')], null=True)),
                ('backup_upload_status', models.TextField(blank=True, choices=[(b'pending', b'pending'), (b'processing', b'processing'), (b'completed', b'completed'), (b'failed', b'failed')], null=True)),
                ('use_dynamic_click_url', models.NullBooleanField()),
                ('size_in_bytes', models.IntegerField(blank=True, null=True)),
                ('text_title', models.TextField(blank=True, null=True)),
                ('text_description', models.TextField(blank=True, null=True)),
                ('text_display_url', models.TextField(blank=True, null=True)),
                ('click_action', models.TextField(blank=True, choices=[(b'click-to-web', b'click-to-web'), (b'click-to-web', b'click-to-web')], null=True)),
                ('click_target', models.TextField(blank=True, null=True)),
                ('technical_attributes', models.TextField(blank=True, null=True)),
                ('pop_values', models.TextField(blank=True, null=True)),
                ('sla', models.IntegerField(blank=True, null=True)),
                ('sla_eta', models.DateTimeField()),
                ('currency', models.TextField(blank=True, null=True)),
                ('first_run', models.DateTimeField()),
                ('last_run', models.DateTimeField()),
                ('mobile', models.TextField(blank=True, null=True)),
                ('video_attribute', models.TextField(blank=True, null=True)),
                ('content_source', models.TextField(blank=True, null=True)),
                ('custom_request_template', models.TextField(blank=True, null=True)),
                ('flash_backup_url_secure', models.TextField(blank=True, null=True)),
                ('member_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('advertiser_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Advertiser')),
                ('brand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Brand')),
            ],
            options={
                'db_table': 'creative',
            },
        ),
        migrations.CreateModel(
            name='CreativeAdserver',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('use_type', models.TextField(blank=True, null=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('creative', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Creative')),
            ],
            options={
                'db_table': 'creative_adserver',
            },
        ),
        migrations.CreateModel(
            name='CreativeCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Category')),
                ('creative', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Creative')),
            ],
            options={
                'db_table': 'creative_category',
            },
        ),
        migrations.CreateModel(
            name='CreativeCompetitiveBrand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Brand')),
                ('creative', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Creative')),
            ],
            options={
                'db_table': 'creative_competitive_brand',
            },
        ),
        migrations.CreateModel(
            name='CreativeCompetitiveCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Category')),
                ('creative', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Creative')),
            ],
            options={
                'db_table': 'creative_competitive_category',
            },
        ),
        migrations.CreateModel(
            name='CreativeFolder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, db_index=True, null=True)),
                ('last_modified', models.DateTimeField()),
                ('advertiser', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Advertiser')),
            ],
            options={
                'db_table': 'creative_folder',
            },
        ),
        migrations.CreateModel(
            name='CreativePixel',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('param_1', models.TextField(blank=True, null=True)),
                ('param_2', models.TextField(blank=True, null=True)),
                ('param_3', models.TextField(blank=True, null=True)),
                ('param_4', models.TextField(blank=True, null=True)),
                ('param_5', models.TextField(blank=True, null=True)),
                ('format', models.TextField(blank=True, choices=[(b'raw-js', b'raw-js'), (b'url-html', b'url-html'), (b'url-js', b'url-js'), (b'url-image', b'url-image'), (b'raw-url', b'raw-url')], null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('secure_content', models.TextField(blank=True, null=True)),
                ('url', models.TextField(blank=True, null=True)),
                ('secure_url', models.TextField(blank=True, null=True)),
                ('creative', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Creative')),
            ],
            options={
                'db_table': 'creative_pixel',
            },
        ),
        migrations.CreateModel(
            name='CreativeSegment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.TextField(blank=True, choices=[(b'add on view', b'add on view'), (b'add on click', b'add on click')], null=True)),
                ('creative', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Creative')),
            ],
            options={
                'db_table': 'creative_segment',
            },
        ),
        migrations.CreateModel(
            name='CreativeThirdpartyPixel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creative', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Creative')),
            ],
            options={
                'db_table': 'creative_thirdparty_pixel',
            },
        ),
        migrations.CreateModel(
            name='CteativeFormat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, db_index=True, null=True)),
                ('last_modified', models.DateTimeField()),
            ],
            options={
                'db_table': 'creative_format',
            },
        ),
        migrations.CreateModel(
            name='CteativeTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, db_index=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('member_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('is_default', models.NullBooleanField()),
                ('is_archived', models.NullBooleanField()),
                ('content_js', models.TextField(blank=True, null=True)),
                ('content_html', models.TextField(blank=True, null=True)),
                ('content_xml', models.TextField(blank=True, null=True)),
                ('callback_content_html', models.TextField(blank=True, null=True)),
                ('macros', models.TextField(blank=True, null=True)),
                ('last_modified', models.DateTimeField()),
                ('format', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.CteativeFormat')),
            ],
            options={
                'db_table': 'creative_template',
            },
        ),
        migrations.CreateModel(
            name='FilteredAdvertisers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('advertiser', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Advertiser')),
            ],
            options={
                'db_table': 'filtered_advertisers',
            },
        ),
        migrations.CreateModel(
            name='FilteredCampaigns',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('campaign', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Campaign')),
            ],
            options={
                'db_table': 'filtered_campaigns',
            },
        ),
        migrations.CreateModel(
            name='FilteredLineItems',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'filtered_line_items',
            },
        ),
        migrations.CreateModel(
            name='GoalPixel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.TextField(blank=True, db_index=True, null=True)),
                ('name', models.TextField(blank=True, db_index=True, null=True)),
                ('state', models.TextField(blank=True, choices=[(b'active', b'Active'), (b'inactive', b'Inactive')], null=True)),
                ('trigger_type', models.TextField(blank=True, choices=[(b'view', b'view'), (b'click', b'click'), (b'hybrid', b'hybrid')], null=True)),
                ('post_click_goal_target', models.FloatField(blank=True, null=True)),
                ('post_view_goal_target', models.FloatField(blank=True, null=True)),
                ('post_click_goal_threshold', models.FloatField(blank=True, null=True)),
                ('post_view_goal_threshold', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'goal_pixel',
            },
        ),
        migrations.CreateModel(
            name='ImpressionTracker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('member_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('name', models.TextField(blank=True, db_index=True, null=True)),
                ('code', models.TextField(blank=True, db_index=True, null=True)),
                ('state', models.TextField(blank=True, choices=[(b'active', b'Active'), (b'inactive', b'Inactive')], null=True)),
                ('payment_rule_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('last_modified', models.DateTimeField()),
                ('advertiser_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Advertiser')),
            ],
            options={
                'db_table': 'impression_tracker',
            },
        ),
        migrations.CreateModel(
            name='ImpressionTrackerPlacement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('impression_tracker', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.ImpressionTracker')),
            ],
            options={
                'db_table': 'impression_tracker_placement',
            },
        ),
        migrations.CreateModel(
            name='InsertionOrder',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('fetch_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('name', models.TextField(blank=True, db_index=True, null=True)),
                ('code', models.TextField(blank=True, db_index=True, null=True)),
                ('state', models.TextField(blank=True, choices=[(b'active', b'Active'), (b'inactive', b'Inactive')], null=True)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('last_modified', models.DateTimeField()),
                ('timezone', models.FloatField(blank=True, null=True)),
                ('currency', models.FloatField(blank=True, null=True)),
                ('comments', models.FloatField(blank=True, null=True)),
                ('billing_code', models.FloatField(blank=True, null=True)),
                ('budget_intervals', models.TextField(blank=True, null=True)),
                ('lifetime_pacing', models.NullBooleanField()),
                ('lifetime_budget', models.FloatField(blank=True, null=True)),
                ('lifetime_budget_imps', models.IntegerField(blank=True, null=True)),
                ('enable_pacing', models.NullBooleanField()),
                ('lifetime_pacing_span', models.IntegerField(blank=True, null=True)),
                ('daily_budget', models.FloatField(blank=True, null=True)),
                ('daily_budget_imps', models.FloatField(blank=True, null=True)),
                ('lifetime_pacing_pct', models.FloatField(blank=True, null=True)),
                ('advertiser', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Advertiser')),
            ],
            options={
                'db_table': 'insertion_order',
            },
        ),
        migrations.CreateModel(
            name='InsertionOrderBrokerFees',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('broker_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('payment_type', models.TextField(blank=True, choices=[(b'cpm', b'cpm'), (b'revshare', b'revshare')], null=True)),
                ('value', models.FloatField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('insertion_order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.InsertionOrder')),
            ],
            options={
                'db_table': 'insertion_order_brocker_fees',
            },
        ),
        migrations.CreateModel(
            name='InsertionOrderLabel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('insertion_order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.InsertionOrder')),
            ],
            options={
                'db_table': 'insertion_order_label',
            },
        ),
        migrations.CreateModel(
            name='InventoryAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True)),
                ('last_activity', models.DateTimeField()),
            ],
            options={
                'db_table': 'inventory_attribute',
            },
        ),
        migrations.CreateModel(
            name='Label',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, db_index=True, null=True)),
                ('member_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('is_user_associated', models.NullBooleanField()),
                ('is_reporting_enabled', models.NullBooleanField()),
                ('object_type', models.TextField(blank=True, choices=[(b'advertiser', b'Advertiser'), (b'insertion_order', b'Insertion order'), (b'line_item', b'Line item'), (b'campaign', b'Campaign'), (b'publisher', b'Publisher')], db_index=True, null=True)),
                ('report_field', models.TextField(blank=True, null=True)),
                ('last_modified', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'label',
            },
        ),
        migrations.CreateModel(
            name='LabeledObject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.TextField(blank=True, null=True)),
                ('advertiser', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Advertiser')),
                ('campaign', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Campaign')),
                ('insertion_order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.InsertionOrder')),
                ('label', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Label')),
            ],
            options={
                'db_table': 'labeled_object',
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True, db_index=True, null=True)),
            ],
            options={
                'db_table': 'language',
            },
        ),
        migrations.CreateModel(
            name='LineItem',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('fetch_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('code', models.TextField(blank=True, db_index=True, null=True)),
                ('name', models.TextField(blank=True, db_index=True, null=True)),
                ('state', models.TextField(blank=True, choices=[(b'active', b'Active'), (b'inactive', b'Inactive')], null=True)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('timezone', models.TextField(blank=True, null=True)),
                ('revenue_value', models.FloatField(blank=True, null=True)),
                ('revenue_type', models.TextField(blank=True, choices=[(b'none', b'none'), (b'cpm', b'cpm'), (b'cpc', b'cpc'), (b'cpa', b'cpa'), (b'cost_plus_cpm', b'cost_plus_cpm'), (b'cost_plus_margin', b'cost_plus_margin'), (b'flat_fee', b'flat_fee')], null=True)),
                ('goal_type', models.TextField(blank=True, choices=[(b'none', b'none'), (b'cpc', b'cpc'), (b'cpa', b'cpa'), (b'ctr', b'ctr')], null=True)),
                ('goal_value', models.FloatField(blank=True, null=True)),
                ('last_modified', models.DateTimeField()),
                ('click_url', models.TextField(blank=True, null=True)),
                ('currency', models.TextField(blank=True, null=True)),
                ('require_cookie_for_tracking', models.NullBooleanField()),
                ('member_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('remaining_days', models.IntegerField(blank=True, null=True)),
                ('total_days', models.IntegerField(blank=True, null=True)),
                ('manage_creative', models.NullBooleanField()),
                ('flat_fee_status', models.TextField(blank=True, choices=[(b'pending', b'pending'), (b'processing', b'processing'), (b'allocated', b'allocated'), (b'error', b'error')], null=True)),
                ('flat_fee_allocation_date', models.DateTimeField(blank=True, null=True)),
                ('flat_fee_adjustment_id', models.IntegerField(blank=True, null=True)),
                ('valuation_min_margin_pct', models.FloatField(blank=True, null=True)),
                ('valuation_goal_threshold', models.FloatField(blank=True, null=True)),
                ('valuation_goal_target', models.FloatField(blank=True, null=True)),
                ('valuation_performance_offer', models.NullBooleanField()),
                ('valuation_performance_mkt_managed', models.NullBooleanField()),
                ('valuation_performance_mkt_crossnet', models.NullBooleanField()),
                ('budget_intervals', models.TextField(blank=True, null=True)),
                ('lifetime_budget', models.FloatField(blank=True, null=True)),
                ('lifetime_budget_imps', models.IntegerField(blank=True, null=True)),
                ('daily_budget', models.FloatField(blank=True, null=True)),
                ('daily_budget_imps', models.FloatField(blank=True, null=True)),
                ('enable_pacing', models.NullBooleanField()),
                ('allow_safety_pacing', models.NullBooleanField()),
                ('lifetime_pacing', models.NullBooleanField()),
                ('lifetime_pacing_span', models.IntegerField(blank=True, null=True)),
                ('lifetime_pacing_pct', models.FloatField(blank=True, null=True)),
                ('payout_margin', models.FloatField(blank=True, null=True)),
                ('first_run', models.DateTimeField(blank=True, null=True)),
                ('last_run', models.DateTimeField(blank=True, null=True)),
                ('expected_pacing', models.FloatField(blank=True, null=True)),
                ('total_pacing', models.FloatField(blank=True, null=True)),
                ('has_pacing_dollars', models.IntegerField(blank=True, null=True)),
                ('has_pacing_imps', models.IntegerField(blank=True, null=True)),
                ('imps_pacing_percent', models.IntegerField(blank=True, null=True)),
                ('rev_pacing_percent', models.IntegerField(blank=True, null=True)),
                ('alerts', models.TextField(blank=True, null=True)),
                ('creative_distribution_type', models.TextField(blank=True, choices=[(b'even', b'even'), (b'weighted', b'weighted'), (b'ctr-optimized', b'ctr-optimized')], null=True)),
                ('weight', models.IntegerField(blank=True, null=True)),
                ('inventory_type', models.TextField(blank=True, null=True)),
                ('priority', models.TextField(blank=True, null=True)),
                ('advertiser', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Advertiser')),
                ('insertion_order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.InsertionOrder')),
            ],
            options={
                'db_table': 'line_item',
            },
        ),
        migrations.CreateModel(
            name='LineItemBroker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('broker_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('payment_type', models.TextField(blank=True, choices=[(b'cpm', b'cpm'), (b'revshare', b'revshare')], null=True)),
                ('value', models.FloatField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('line_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.LineItem')),
            ],
            options={
                'db_table': 'line_item_broker',
            },
        ),
        migrations.CreateModel(
            name='LineItemConversionPixel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('line_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.LineItem')),
                ('pixel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.ConversionPixel')),
            ],
            options={
                'db_table': 'line_item_conversion_pixel',
            },
        ),
        migrations.CreateModel(
            name='LineItemCreatives',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.TextField(blank=True, db_index=True, null=True)),
                ('creative', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Creative')),
                ('line_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.LineItem')),
            ],
            options={
                'db_table': 'line_item_creatives',
            },
        ),
        migrations.CreateModel(
            name='LineItemGoalPixel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('line_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.LineItem')),
                ('pixel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.GoalPixel')),
            ],
            options={
                'db_table': 'line_item_goal_pixel',
            },
        ),
        migrations.CreateModel(
            name='LineItemInsertionOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('insertion_order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.InsertionOrder')),
                ('line_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.LineItem')),
            ],
            options={
                'db_table': 'line_item_insertion_order',
            },
        ),
        migrations.CreateModel(
            name='LineItemLabel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Label')),
                ('line_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.LineItem')),
            ],
            options={
                'db_table': 'line_item_label',
            },
        ),
        migrations.CreateModel(
            name='MediaSubType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, db_index=True, null=True)),
                ('last_modified', models.DateTimeField()),
            ],
            options={
                'db_table': 'media_sub_type',
            },
        ),
        migrations.CreateModel(
            name='MediaSubTypeNativeAssets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('native_asset_name', models.TextField(blank=True, choices=[(b'title', b'title'), (b'content', b'content'), (b'description', b'description'), (b'full_text', b'full_text'), (b'context', b'context'), (b'icon_img_url', b'icon_img_url'), (b'main_media', b'main_media'), (b'cta', b'cta'), (b'rating', b'rating'), (b'click_fallback_url', b'click_fallback_url')], null=True)),
                ('min_text_length', models.IntegerField(blank=True, null=True)),
                ('max_text_length', models.IntegerField(blank=True, null=True)),
                ('requirement', models.TextField(blank=True, choices=[(b'required', b'required'), (b'recommended', b'recommended'), (b'optional', b'optional')], null=True)),
                ('media_sub_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.MediaSubType')),
            ],
            options={
                'db_table': 'media_sub_type_native_assets',
            },
        ),
        migrations.CreateModel(
            name='MediaSubTypePermittedSizes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform_width', models.IntegerField(blank=True, null=True)),
                ('platform_height', models.IntegerField(blank=True, null=True)),
                ('validate_image_size', models.NullBooleanField()),
                ('scaling_permitted', models.NullBooleanField()),
                ('aspect_ratio_tolerance', models.FloatField(blank=True, null=True)),
                ('min_image_width', models.IntegerField(blank=True, null=True)),
                ('max_image_width', models.IntegerField(blank=True, null=True)),
                ('min_image_height', models.IntegerField(blank=True, null=True)),
                ('max_image_height', models.IntegerField(blank=True, null=True)),
                ('media_sub_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.MediaSubType')),
            ],
            options={
                'db_table': 'media_sub_type_permitted_sizes',
            },
        ),
        migrations.CreateModel(
            name='MediaType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, db_index=True, null=True)),
                ('media_type_group_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('uses_sizes', models.TextField(blank=True, choices=[(b'always', b'Width and height are required when adding creatives (Banner, Expandable, and Facebook)'), (b'sometimes', b'Width and height are sometimes required when adding creatives (Pop and Text)'), (b'never', b'Width and height are not required when adding creatives (Interstitial, Video, and Skin)')], null=True)),
                ('last_modified', models.DateTimeField()),
            ],
            options={
                'db_table': 'media_type',
            },
        ),
        migrations.CreateModel(
            name='NetworkAnalyticsRaw',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('json', models.TextField(blank=True, null=True)),
                ('csv', models.TextField(blank=True, null=True)),
                ('report_type', models.TextField(blank=True, null=True)),
                ('report_id', models.TextField(blank=True, null=True)),
                ('last_updated', models.DateTimeField()),
            ],
            options={
                'db_table': 'network_analytics_raw',
            },
        ),
        migrations.CreateModel(
            name='NetworkAnalyticsReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hour', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('entity_member_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('buyer_member_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('seller_member_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('adjustment_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('pub_rule_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('site_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('pixel_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('size', models.TextField(blank=True, null=True)),
                ('billing_period_start_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('billing_period_end_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('geo_country', models.TextField(blank=True, null=True)),
                ('inventory_class', models.TextField(blank=True, null=True)),
                ('bid_type', models.TextField(blank=True, null=True)),
                ('imp_type_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('buyer_type', models.TextField(blank=True, null=True)),
                ('seller_type', models.TextField(blank=True, null=True)),
                ('revenue_type_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('supply_type', models.TextField(blank=True, null=True)),
                ('payment_type', models.TextField(blank=True, null=True)),
                ('deal_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('advertiser', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Advertiser')),
                ('brand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Brand')),
                ('campaign', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Campaign')),
                ('creative', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Creative')),
                ('insertion_order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.InsertionOrder')),
                ('line_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.LineItem')),
                ('media_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.MediaType')),
            ],
            options={
                'db_table': 'network_analytics_report',
            },
        ),
        migrations.CreateModel(
            name='OperatingSystem',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('fetch_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('name', models.TextField(blank=True, db_index=True, null=True)),
                ('platform_type', models.TextField(blank=True, choices=[(b'web', b'web'), (b'mobile', b'mobile'), (b'both', b'both')], null=True)),
                ('last_modified', models.DateTimeField()),
            ],
            options={
                'db_table': 'operating_system',
            },
        ),
        migrations.CreateModel(
            name='OperatingSystemExtended',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('fetch_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('name', models.TextField(blank=True, db_index=True, null=True)),
                ('last_modified', models.DateTimeField()),
                ('search_string', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'operating_system_extended',
            },
        ),
        migrations.CreateModel(
            name='OSFamily',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True, db_index=True, null=True)),
                ('fetch_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('last_modified', models.DateTimeField()),
            ],
            options={
                'db_table': 'os_family',
            },
        ),
        migrations.CreateModel(
            name='PixelTemplate',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True, db_index=True, null=True)),
                ('format', models.TextField(blank=True, choices=[(b'raw-js', b'raw-js'), (b'url-html', b'url-html'), (b'url-js', b'url-js'), (b'url-image', b'url-image'), (b'raw-url', b'raw-url')], null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('secure_content', models.TextField(blank=True, null=True)),
                ('url', models.TextField(blank=True, null=True)),
                ('secure_url', models.TextField(blank=True, null=True)),
                ('num_required_params', models.IntegerField(blank=True, null=True)),
                ('require_reaudit', models.NullBooleanField()),
            ],
            options={
                'db_table': 'pixel_template',
            },
        ),
        migrations.CreateModel(
            name='Placement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, db_index=True, null=True)),
                ('code', models.TextField(blank=True, db_index=True, null=True)),
                ('code2', models.TextField(blank=True, db_index=True, null=True)),
                ('code3', models.TextField(blank=True, db_index=True, null=True)),
                ('state', models.TextField(blank=True, choices=[(b'active', b'Active'), (b'inactive', b'Inactive')], null=True)),
                ('width', models.IntegerField(blank=True, db_index=True, null=True)),
                ('height', models.IntegerField(blank=True, db_index=True, null=True)),
                ('is_resizable', models.NullBooleanField()),
                ('default_position', models.TextField(blank=True, choices=[(b'above', b'above the fold'), (b'below', b'below the fold'), (b'unknown', b'unknown')], null=True)),
                ('site_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('inventory_source_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('ad_profile_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('reserve_price', models.FloatField(blank=True, null=True)),
                ('hide_referer', models.NullBooleanField()),
                ('default_referrer_url', models.TextField(blank=True, null=True)),
                ('visibility_profile_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('exclusive', models.NullBooleanField()),
                ('pixel_url', models.TextField(blank=True, null=True)),
                ('pixel_type', models.TextField(blank=True, choices=[(b'javascript', b'javascript'), (b'image', b'image')], null=True)),
                ('intended_audience', models.TextField(blank=True, choices=[(b'general', b'general'), (b'children', b'children'), (b'young_adult', b'young_adult'), (b'mature', b'mature')], null=True)),
                ('audited', models.NullBooleanField()),
                ('audit_level', models.TextField(blank=True, choices=[(b'site', b'site'), (b'placement', b'placement')], null=True)),
                ('default_calculation_type', models.TextField(blank=True, choices=[(b'gross', b'gross'), (b'net', b'net')], null=True)),
                ('apply_floor_to_direct', models.NullBooleanField()),
                ('demand_filter_action', models.TextField(blank=True, null=True)),
                ('floor_application_target', models.TextField(blank=True, choices=[(b'external_only', b'external_only'), (b'external_non_preferred', b'external_non_preferred'), (b'all', b'all')], null=True)),
                ('pixel_url_secure', models.TextField(blank=True, null=True)),
                ('site_audit_status', models.TextField(blank=True, choices=[(b'self', b'self'), (b'unaudited', b'unaudited')], null=True)),
                ('toolbar', models.TextField(blank=True, null=True)),
                ('cost_cpm', models.FloatField(blank=True, null=True)),
                ('is_prohibited', models.NullBooleanField()),
                ('last_modified', models.DateTimeField(blank=True, null=True)),
                ('content_retrieval_timeout_ms', models.IntegerField(blank=True, null=True)),
                ('enable_for_mediation', models.NullBooleanField()),
                ('video', models.TextField(blank=True, null=True)),
                ('ad_types', models.TextField(blank=True, null=True)),
                ('use_detected_domain', models.NullBooleanField()),
                ('default_creative', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Creative')),
            ],
            options={
                'db_table': 'placement',
            },
        ),
        migrations.CreateModel(
            name='PlacementContentCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.ContentCategory')),
                ('placement', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Placement')),
            ],
            options={
                'db_table': 'placement_content_category',
            },
        ),
        migrations.CreateModel(
            name='PlacementEstimatedClearPrices',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clear_price', models.IntegerField(blank=True, null=True)),
                ('average_price', models.IntegerField(blank=True, null=True)),
                ('width', models.FloatField(blank=True, null=True)),
                ('height', models.IntegerField(blank=True, null=True)),
                ('verified', models.NullBooleanField()),
                ('placement', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Placement')),
            ],
            options={
                'db_table': 'placement_estimated_clear_prices',
            },
        ),
        migrations.CreateModel(
            name='PlacementInventoryAttributes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inventory_attribute', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.InventoryAttribute')),
                ('placement', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Placement')),
            ],
            options={
                'db_table': 'placement_inventory_attributes',
            },
        ),
        migrations.CreateModel(
            name='PlacementMediaSubType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_private', models.NullBooleanField()),
                ('last_modified', models.DateTimeField()),
                ('media_sub_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.MediaSubType')),
                ('placement', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Placement')),
            ],
            options={
                'db_table': 'placement_media_sub_type',
            },
        ),
        migrations.CreateModel(
            name='PlacementMediaType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_modified', models.DateTimeField()),
                ('media_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.MediaType')),
                ('placement', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Placement')),
            ],
            options={
                'db_table': 'placement_media_type',
            },
        ),
        migrations.CreateModel(
            name='PlacementPopValues',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pop_freq_times', models.IntegerField(blank=True, null=True)),
                ('pop_freq_duration', models.IntegerField(blank=True, null=True)),
                ('pop_is_prepop', models.NullBooleanField()),
                ('pop_max_width', models.IntegerField(blank=True, null=True)),
                ('pop_max_height', models.IntegerField(blank=True, null=True)),
                ('placement', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Placement')),
            ],
            options={
                'db_table': 'placement_pop_values',
            },
        ),
        migrations.CreateModel(
            name='PlacementPrivateSizes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('width', models.IntegerField(blank=True, null=True)),
                ('height', models.IntegerField(blank=True, null=True)),
                ('placement', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Placement')),
            ],
            options={
                'db_table': 'placement_private_sizes',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('fetch_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('code', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, db_index=True, null=True)),
                ('is_template', models.NullBooleanField()),
                ('last_modified', models.DateTimeField()),
                ('max_lifetime_imps', models.IntegerField(blank=True, null=True)),
                ('min_session_imps', models.IntegerField(blank=True, null=True)),
                ('max_session_imps', models.IntegerField(blank=True, null=True)),
                ('max_day_imps', models.IntegerField(blank=True, null=True)),
                ('min_minutes_per_imp', models.IntegerField(blank=True, null=True)),
                ('max_page_imps', models.IntegerField(blank=True, null=True)),
                ('daypart_timezone', models.TextField(blank=True, null=True)),
                ('daypart_targets', models.TextField(blank=True, null=True)),
                ('segment_targets', models.TextField(blank=True, null=True)),
                ('segment_group_targets', models.TextField(blank=True, null=True)),
                ('segment_boolean_operator', models.TextField(blank=True, choices=[(b'and', b'and'), (b'or', b'or')], null=True)),
                ('age_targets', models.TextField(blank=True, null=True)),
                ('gender_targets', models.TextField(blank=True, null=True)),
                ('country_targets', models.TextField(blank=True, null=True)),
                ('country_action', models.TextField(blank=True, choices=[(b'include', b'include'), (b'exclude', b'exclude')], null=True)),
                ('region_targets', models.TextField(blank=True, null=True)),
                ('region_action', models.TextField(blank=True, choices=[(b'include', b'include'), (b'exclude', b'exclude')], null=True)),
                ('dma_targets', models.TextField(blank=True, null=True)),
                ('dma_action', models.TextField(blank=True, choices=[(b'include', b'include'), (b'exclude', b'exclude')], null=True)),
                ('city_targets', models.TextField(blank=True, null=True)),
                ('city_action', models.TextField(blank=True, choices=[(b'include', b'include'), (b'exclude', b'exclude')], null=True)),
                ('domain_targets', models.TextField(blank=True, null=True)),
                ('domain_action', models.TextField(blank=True, choices=[(b'include', b'include'), (b'exclude', b'exclude')], null=True)),
                ('domain_list_targets', models.TextField(blank=True, null=True)),
                ('domain_list_action', models.TextField(blank=True, choices=[(b'include', b'include'), (b'exclude', b'exclude')], null=True)),
                ('platform_placement_targets', models.TextField(blank=True, null=True)),
                ('size_targets', models.TextField(blank=True, null=True)),
                ('seller_member_group_targets', models.TextField(blank=True, null=True)),
                ('member_targets', models.TextField(blank=True, null=True)),
                ('member_default_action', models.TextField(blank=True, choices=[(b'include', b'include'), (b'exclude', b'exclude')], null=True)),
                ('video_targets', models.TextField(blank=True, null=True)),
                ('engagement_rate_targets', models.TextField(blank=True, null=True)),
                ('publisher_targets', models.TextField(blank=True, null=True)),
                ('site_targets', models.TextField(blank=True, null=True)),
                ('placement_targets', models.TextField(blank=True, null=True)),
                ('inventory_action', models.TextField(blank=True, choices=[(b'include', b'include'), (b'exclude', b'exclude')], null=True)),
                ('content_category_targets', models.TextField(blank=True, null=True)),
                ('deal_targets', models.TextField(blank=True, null=True)),
                ('platform_publisher_targets', models.TextField(blank=True, null=True)),
                ('platform_content_category_targets', models.TextField(blank=True, null=True)),
                ('use_inventory_attribute_targets', models.TextField(blank=True, null=True)),
                ('trust', models.TextField(blank=True, choices=[(b'appnexus', b'appnexus'), (b'seller', b'seller')], null=True)),
                ('certified_supply', models.NullBooleanField()),
                ('allow_unaudited', models.NullBooleanField()),
                ('session_freq_type', models.TextField(blank=True, choices=[(b'platform', b'platform'), (b'publisher', b'publisher')], null=True)),
                ('inventory_attribute_targets', models.TextField(blank=True, null=True)),
                ('intended_audience_targets', models.TextField(blank=True, null=True)),
                ('language_targets', models.TextField(blank=True, null=True)),
                ('language_action', models.TextField(blank=True, choices=[(b'include', b'include'), (b'exclude', b'exclude')], null=True)),
                ('querystring_targets', models.TextField(blank=True, null=True)),
                ('querystring_action', models.TextField(blank=True, choices=[(b'include', b'include'), (b'exclude', b'exclude')], null=True)),
                ('querystring_boolean_operator', models.TextField(blank=True, choices=[(b'and', b'and'), (b'or', b'or')], null=True)),
                ('postal_code_targets', models.TextField(blank=True, null=True)),
                ('zip_targets', models.TextField(blank=True, null=True)),
                ('supply_type_targets', models.TextField(blank=True, null=True)),
                ('supply_type_action', models.TextField(blank=True, choices=[(b'include', b'include'), (b'exclude', b'exclude')], null=True)),
                ('user_group_targets', models.TextField(blank=True, null=True)),
                ('position_targets', models.TextField(blank=True, null=True)),
                ('browser_targets', models.TextField(blank=True, null=True)),
                ('browser_action', models.TextField(blank=True, choices=[(b'include', b'include'), (b'exclude', b'exclude')], null=True)),
                ('location_target_latitude', models.IntegerField(blank=True, null=True)),
                ('location_target_longitude', models.IntegerField(blank=True, null=True)),
                ('location_target_radius', models.IntegerField(blank=True, null=True)),
                ('device_model_targets', models.TextField(blank=True, null=True)),
                ('device_model_action', models.TextField(blank=True, choices=[(b'include', b'include'), (b'exclude', b'exclude')], null=True)),
                ('device_type_targets', models.TextField(blank=True, null=True)),
                ('device_type_action', models.TextField(blank=True, choices=[(b'include', b'include'), (b'exclude', b'exclude')], null=True)),
                ('carrier_targets', models.TextField(blank=True, null=True)),
                ('carrier_action', models.TextField(blank=True, choices=[(b'include', b'include'), (b'exclude', b'exclude')], null=True)),
                ('operating_system_family_targets', models.TextField(blank=True, null=True)),
                ('operating_system_family_action', models.TextField(blank=True, choices=[(b'include', b'include'), (b'exclude', b'exclude')], null=True)),
                ('use_operating_system_extended_targeting', models.NullBooleanField()),
                ('operating_system_extended_targets', models.TextField(blank=True, null=True)),
                ('operating_system_action', models.TextField(blank=True, choices=[(b'include', b'include'), (b'exclude', b'exclude')], null=True)),
                ('operating_system_targets', models.TextField(blank=True, null=True)),
                ('require_cookie_for_freq_cap', models.NullBooleanField()),
                ('mobile_app_instance_targets', models.TextField(blank=True, null=True)),
                ('mobile_app_instance_action_include', models.NullBooleanField()),
                ('mobile_app_instance_list_targets', models.TextField(blank=True, null=True)),
                ('mobile_app_instance_list_action_include', models.NullBooleanField()),
                ('ip_range_list_targets', models.TextField(blank=True, null=True)),
                ('optimization_zone_action', models.TextField(blank=True, choices=[(b'include', b'include'), (b'exclude', b'exclude')], null=True)),
                ('optimization_zone_targets', models.TextField(blank=True, null=True)),
                ('created_on', models.DateTimeField()),
                ('is_expired', models.NullBooleanField()),
                ('advertiser', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Advertiser')),
            ],
            options={
                'db_table': 'profile',
            },
        ),
        migrations.CreateModel(
            name='Publisher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.TextField(blank=True, db_index=True, null=True)),
                ('name', models.TextField(blank=True, db_index=True, null=True)),
                ('state', models.TextField(blank=True, choices=[(b'active', b'Active'), (b'inactive', b'Inactive')], null=True)),
                ('expose_domains', models.NullBooleanField()),
                ('enable_cookie_tracking_default', models.NullBooleanField()),
                ('reselling_exposure', models.TextField(blank=True, choices=[(b'public', b'public'), (b'private', b'private')], null=True)),
                ('reselling_exposed_on', models.DateTimeField()),
                ('reselling_name', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_rtb', models.NullBooleanField()),
                ('timezone', models.TextField(blank=True, null=True)),
                ('last_modified', models.DateTimeField()),
                ('max_learn_pct', models.IntegerField(blank=True, null=True)),
                ('learn_bypass_cpm', models.IntegerField(blank=True, null=True)),
                ('ad_quality_advanced_mode_enabled', models.NullBooleanField()),
                ('allow_report_on_default_imps', models.NullBooleanField()),
                ('default_site_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('default_ad_profile_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('billing_dba', models.TextField(blank=True, null=True)),
                ('billing_address1', models.TextField(blank=True, null=True)),
                ('billing_address2', models.TextField(blank=True, null=True)),
                ('billing_city', models.TextField(blank=True, null=True)),
                ('billing_state', models.TextField(blank=True, null=True)),
                ('billing_zip', models.TextField(blank=True, null=True)),
                ('billing_country', models.TextField(blank=True, null=True)),
                ('accept_supply_partner_usersync', models.NullBooleanField()),
                ('accept_demand_partner_usersync', models.NullBooleanField()),
                ('accept_data_provider_usersync', models.NullBooleanField()),
                ('ym_profile_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('allow_cpm_managed', models.NullBooleanField()),
                ('allow_cpm_external', models.NullBooleanField()),
                ('allow_cpa_managed', models.NullBooleanField()),
                ('allow_cpa_external', models.NullBooleanField()),
                ('allow_cpc_managed', models.NullBooleanField()),
                ('allow_cpc_external', models.NullBooleanField()),
                ('managed_cpc_bias_pct', models.IntegerField(blank=True, null=True)),
                ('managed_cpa_bias_pct', models.IntegerField(blank=True, null=True)),
                ('external_cpc_bias_pct', models.IntegerField(blank=True, null=True)),
                ('external_cpa_bias_pct', models.IntegerField(blank=True, null=True)),
                ('is_oo', models.NullBooleanField()),
                ('base_payment_rule_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('base_ad_quality_rule_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('currency', models.TextField(blank=True, null=True)),
                ('visibility_profile_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('billing_internal_user', models.IntegerField(blank=True, null=True)),
                ('cpm_reselling_disabled', models.NullBooleanField()),
                ('cpc_reselling_disabled', models.NullBooleanField()),
                ('platform_ops_notes', models.TextField(blank=True, null=True)),
                ('pitbull_segment_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('pitbull_segment_value', models.IntegerField(blank=True, null=True)),
                ('seller_page_cap_enabled', models.NullBooleanField()),
                ('inventory_relationship', models.TextField(blank=True, choices=[(b'unknown', b'unknown'), (b'owned_operated', b'owned_operated'), (b'direct', b'direct'), (b'indirect_single_publisher', b'indirect_single_publisher'), (b'indirect_multiple_publishers', b'indirect_multiple_publishers')], null=True)),
                ('inventory_source', models.TextField(blank=True, choices=[(b'other', b'other'), (b'rubicon', b'rubicon'), (b'openx', b'openx'), (b'pubmatic', b'pubmatic'), (b'aol', b'aol')], null=True)),
                ('disclosure_status', models.TextField(blank=True, choices=[(b'undisclosed', b'undisclosed'), (b'disclosed_pending', b'disclosed_pending'), (b'disclosed_approved', b'disclosed_approved'), (b'disclosed_rejected', b'disclosed_rejected')], null=True)),
                ('inventory_source_name', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'publisher',
            },
        ),
        migrations.CreateModel(
            name='PublisherBrandExceptions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Brand')),
                ('publisher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Publisher')),
            ],
            options={
                'db_table': 'publisher_brand_exceptions',
            },
        ),
        migrations.CreateModel(
            name='PublisherContact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True)),
                ('phone', models.TextField(blank=True, null=True)),
                ('email', models.TextField(blank=True, null=True)),
                ('publisher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Publisher')),
            ],
            options={
                'db_table': 'publisher_contact',
            },
        ),
        migrations.CreateModel(
            name='PublisherExternalInventoryCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, db_index=True, null=True)),
                ('code', models.TextField(blank=True, db_index=True, null=True)),
                ('publisher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Publisher')),
            ],
            options={
                'db_table': 'publisher_external_inventory_code',
            },
        ),
        migrations.CreateModel(
            name='PublisherLabel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.TextField(blank=True, null=True)),
                ('label', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Label')),
                ('publisher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Publisher')),
            ],
            options={
                'db_table': 'publisher_label',
            },
        ),
        migrations.CreateModel(
            name='PublisherPlacement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.TextField(blank=True, null=True)),
                ('placement', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Placement')),
                ('publisher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Publisher')),
            ],
            options={
                'db_table': 'publisher_placement',
            },
        ),
        migrations.CreateModel(
            name='Segment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.TextField(blank=True, db_index=True, null=True)),
                ('state', models.TextField(blank=True, choices=[(b'active', b'Active'), (b'inactive', b'Inactive')], null=True)),
                ('short_name', models.TextField(blank=True, db_index=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('member_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('price', models.FloatField(blank=True, null=True)),
                ('expire_minutes', models.IntegerField(blank=True, null=True)),
                ('enable_rm_piggyback', models.NullBooleanField()),
                ('max_usersync_pixels', models.IntegerField(blank=True, null=True)),
                ('last_modified', models.DateTimeField()),
                ('provider', models.TextField(blank=True, null=True)),
                ('querystring_mapping', models.TextField(blank=True, null=True)),
                ('querystring_mapping_key_value', models.TextField(blank=True, null=True)),
                ('advertiser_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Advertiser')),
                ('parent_segment_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Segment')),
            ],
            options={
                'db_table': 'segment',
            },
        ),
        migrations.CreateModel(
            name='SegmentPiggybackPixels',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.TextField(blank=True, null=True)),
                ('pixel_type', models.TextField(blank=True, choices=[(b'js', b'js'), (b'img', b'img')], null=True)),
                ('segment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Segment')),
            ],
            options={
                'db_table': 'segment_piggyback_pixels',
            },
        ),
        migrations.CreateModel(
            name='SiteDomainPerformanceReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fetch_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('day', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('site_domain', models.TextField(blank=True, db_index=True, null=True)),
                ('deal_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('buyer_member_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('supply_type', models.TextField(blank=True, choices=[(b'web', b'web'), (b'mobile_app', b'mobile_app'), (b'mobile_web', b'mobile_web')], null=True)),
                ('mobile_application_id', models.TextField(blank=True, db_index=True, null=True)),
                ('mobile_application_name', models.TextField(blank=True, db_index=True, null=True)),
                ('mobile_application', models.TextField(blank=True, db_index=True, null=True)),
                ('fold_position', models.TextField(blank=True, choices=[(b'0', b'unknown'), (b'1', b'above'), (b'2', b'below'), (b'11', b'Top FB Ad Slot'), (b'12', b'2nd FB Ad Slot'), (b'13', b'3nd FB Ad Slot'), (b'14', b'4nd FB Ad Slot'), (b'15', b'5nd FB Ad Slot'), (b'16', b'6nd FB Ad Slot'), (b'17', b'7nd FB Ad Slot'), (b'18', b'8nd FB Ad Slot'), (b'19', b'9nd FB Ad Slot'), (b'20', b'10nd FB Ad Slot')], null=True)),
                ('age_bucket', models.TextField(blank=True, choices=[(b'0', b'unknown'), (b'1', b'13-17'), (b'2', b'18-24'), (b'3', b'25-34'), (b'4', b'35-44'), (b'5', b'45-54'), (b'6', b'55-64'), (b'7', b'65+')], null=True)),
                ('gender', models.TextField(blank=True, choices=[(b'm', b'm'), (b'f', b'f'), (b'u', b'u')], null=True)),
                ('is_remarketing', models.NullBooleanField()),
                ('booked_revenue', models.DecimalField(decimal_places=10, max_digits=35)),
                ('clicks', models.IntegerField(blank=True, null=True)),
                ('click_thru_pct', models.FloatField(blank=True, null=True)),
                ('convs_per_mm', models.FloatField(blank=True, null=True)),
                ('convs_rate', models.FloatField(blank=True, null=True)),
                ('cost_ecpa', models.DecimalField(decimal_places=10, max_digits=35)),
                ('cost_ecpc', models.DecimalField(decimal_places=10, max_digits=35)),
                ('cpm', models.DecimalField(decimal_places=10, max_digits=35)),
                ('ctr', models.FloatField(blank=True, null=True)),
                ('imps', models.IntegerField(blank=True, null=True)),
                ('media_cost', models.DecimalField(decimal_places=10, max_digits=35)),
                ('post_click_convs', models.IntegerField(blank=True, null=True)),
                ('post_click_convs_rate', models.FloatField(blank=True, null=True)),
                ('post_view_convs', models.IntegerField(blank=True, null=True)),
                ('post_view_convs_rate', models.FloatField(blank=True, null=True)),
                ('profit', models.DecimalField(decimal_places=10, max_digits=35)),
                ('profit_ecpm', models.DecimalField(decimal_places=10, max_digits=35)),
                ('imps_viewed', models.IntegerField(blank=True, null=True)),
                ('view_measured_imps', models.IntegerField(blank=True, null=True)),
                ('view_rate', models.FloatField(blank=True, null=True)),
                ('view_measurement_rate', models.FloatField(blank=True, null=True)),
                ('advertiser', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Advertiser')),
                ('campaign', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Campaign')),
                ('conversion_pixel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.ConversionPixel')),
                ('line_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.LineItem')),
                ('operating_system', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.OperatingSystemExtended')),
                ('second_level_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='second_level_category_id', to='rtb.ContentCategory')),
                ('top_level_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='top_level_category_id', to='rtb.ContentCategory')),
            ],
            options={
                'db_table': 'site_domain_performance_report',
            },
        ),
        migrations.CreateModel(
            name='ThirdPartyPixel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.NullBooleanField()),
                ('name', models.TextField(blank=True, db_index=True, null=True)),
            ],
            options={
                'db_table': 'thirdparty_pixel',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField()),
                ('username', models.TextField(db_index=True)),
                ('email', models.TextField(db_index=True)),
                ('first_name', models.TextField()),
                ('last_name', models.TextField()),
                ('password', models.TextField()),
                ('date_added', models.DateTimeField(default=datetime.datetime.now)),
            ],
            options={
                'db_table': 'user',
            },
        ),
        migrations.CreateModel(
            name='UserType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
            ],
            options={
                'db_table': 'user_type',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='user_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.UserType'),
        ),
        migrations.AddField(
            model_name='placement',
            name='publisher_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Publisher'),
        ),
        migrations.AddField(
            model_name='operatingsystemextended',
            name='os_family',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.OSFamily'),
        ),
        migrations.AddField(
            model_name='operatingsystem',
            name='os_family',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.OSFamily'),
        ),
        migrations.AddField(
            model_name='networkanalyticsreport',
            name='placement',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Placement'),
        ),
        migrations.AddField(
            model_name='networkanalyticsreport',
            name='publisher',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Publisher'),
        ),
        migrations.AddField(
            model_name='mediasubtype',
            name='media_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.MediaType'),
        ),
        migrations.AddField(
            model_name='lineitem',
            name='profile',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Profile'),
        ),
        migrations.AddField(
            model_name='labeledobject',
            name='line_item',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.LineItem'),
        ),
        migrations.AddField(
            model_name='labeledobject',
            name='publisher',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Publisher'),
        ),
        migrations.AddField(
            model_name='insertionorderlabel',
            name='line_item',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.LineItem'),
        ),
        migrations.AddField(
            model_name='impressiontrackerplacement',
            name='placement',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Placement'),
        ),
        migrations.AddField(
            model_name='impressiontracker',
            name='line_item',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.LineItem'),
        ),
        migrations.AddField(
            model_name='impressiontracker',
            name='publisher',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Publisher'),
        ),
        migrations.AddField(
            model_name='filteredlineitems',
            name='line_item',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.LineItem'),
        ),
        migrations.AddField(
            model_name='filteredlineitems',
            name='placement',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Placement'),
        ),
        migrations.AddField(
            model_name='filteredcampaigns',
            name='placement',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Placement'),
        ),
        migrations.AddField(
            model_name='filteredadvertisers',
            name='placement',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Placement'),
        ),
        migrations.AddField(
            model_name='cteativetemplate',
            name='media_subtype',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.MediaSubType'),
        ),
        migrations.AddField(
            model_name='creativethirdpartypixel',
            name='thirdparty_pixel',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.ThirdPartyPixel'),
        ),
        migrations.AddField(
            model_name='creativesegment',
            name='segment',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Segment'),
        ),
        migrations.AddField(
            model_name='creativepixel',
            name='pixel_template',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.PixelTemplate'),
        ),
        migrations.AddField(
            model_name='creative',
            name='folder',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.CreativeFolder'),
        ),
        migrations.AddField(
            model_name='creative',
            name='language',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Language'),
        ),
        migrations.AddField(
            model_name='creative',
            name='profile_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Profile'),
        ),
        migrations.AddField(
            model_name='creative',
            name='publisher_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Publisher'),
        ),
        migrations.AddField(
            model_name='creative',
            name='template',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.CteativeTemplate'),
        ),
        migrations.AddField(
            model_name='clicktrackerplacement',
            name='placement',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Placement'),
        ),
        migrations.AddField(
            model_name='clicktracker',
            name='line_item',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.LineItem'),
        ),
        migrations.AddField(
            model_name='clicktracker',
            name='publisher',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Publisher'),
        ),
        migrations.AddField(
            model_name='campaignlineitems',
            name='line_item',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.LineItem'),
        ),
        migrations.AddField(
            model_name='campaignlabel',
            name='label',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Label'),
        ),
        migrations.AddField(
            model_name='campaigncreative',
            name='creative',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Creative'),
        ),
        migrations.AddField(
            model_name='campaignconversionpixel',
            name='conversion_pixel',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.ConversionPixel'),
        ),
        migrations.AddField(
            model_name='campaign',
            name='line_item',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.LineItem'),
        ),
        migrations.AddField(
            model_name='campaign',
            name='profile',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Profile'),
        ),
        migrations.AddField(
            model_name='brandincountry',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Category'),
        ),
        migrations.AddField(
            model_name='brand',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Category'),
        ),
        migrations.AddField(
            model_name='allowedsegments',
            name='placement',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Placement'),
        ),
        migrations.AddField(
            model_name='allowedsegments',
            name='segment',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Segment'),
        ),
        migrations.AddField(
            model_name='advertiserthirdpartypixel',
            name='thirdparty_pixel',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.ThirdPartyPixel'),
        ),
        migrations.AddField(
            model_name='advertiserlabel',
            name='label',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Label'),
        ),
        migrations.AddField(
            model_name='advertisercategory',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Category'),
        ),
        migrations.AddField(
            model_name='advertiserbrand',
            name='brand',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Brand'),
        ),
        migrations.AlterIndexTogether(
            name='networkanalyticsreport',
            index_together=set([('campaign', 'hour')]),
        ),
    ]
