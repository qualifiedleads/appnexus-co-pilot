# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2017-03-08 19:10
from __future__ import unicode_literals

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ('rtb', '0151_placementsadditionalnames'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='uiusualcampaignsgraph',
            name='evaluation_date',
        ),
        migrations.RemoveField(
            model_name='uiusualcampaignsgraph',
            name='window_start_date',
        ),
        migrations.RemoveField(
            model_name='uiusualplacementsgraph',
            name='evaluation_date',
        ),
        migrations.RemoveField(
            model_name='uiusualplacementsgraph',
            name='window_start_date',
        ),

        migrations.RunSQL("delete from ui_usual_advertisers_graph"),

        migrations.RunSQL("""
  insert into ui_usual_advertisers_graph as ut (
    advertiser_id,
    type,
    day_chart)
  select
  ads.advertiser_id,
  'all',
  array_to_json(array(
    select json_build_object(
      'day', "day",
      'imp', sum(imps),
      'spend', sum(media_cost),
      'clicks', sum(clicks),
      'conversions', sum(post_click_convs) + sum(post_view_convs),
      'cvr', case sum(imps) when 0 then 0 else (sum(post_click_convs) + sum(post_view_convs)) / sum(imps)::float end,
      'cpc', case sum(clicks) when 0 then 0 else sum(media_cost) / sum(clicks) end,
      'ctr', case sum(imps) when 0 then 0 else sum(clicks)::float / sum(imps) end
    )
    from site_domain_performance_report tt
    where
      ads.advertiser_id=tt.advertiser_id
    and
      (("day" >= '1970-01-01 00:00:00'
        and
        "day" <= current_timestamp::timestamp without time zone)
      or
       ("hour" >= '1970-01-01 00:00:00'
        and
        "hour" <= current_timestamp::timestamp without time zone))
    group by "day"
    order by "day"
  ))
from (
       select distinct advertiser_id from site_domain_performance_report
        where
        (("day" >= '1970-01-01 00:00:00'
                and
                "day" <= current_timestamp::timestamp without time zone)
              or
               ("hour" >= '1970-01-01 00:00:00'
                and
                "hour" <= current_timestamp::timestamp without time zone)))ads;
                        """),

        migrations.RunSQL("""
      insert into ui_usual_advertisers_graph as ut (
        advertiser_id,
        type,
        day_chart)
      select
      ads.advertiser_id,
      'yesterday',
      array_to_json(array(
        select json_build_object(
          'day', "day",
          'imp', sum(imps),
          'spend', sum(media_cost),
          'clicks', sum(clicks),
          'conversions', sum(post_click_convs) + sum(post_view_convs),
          'cvr', case sum(imps) when 0 then 0 else (sum(post_click_convs) + sum(post_view_convs)) / sum(imps)::float end,
          'cpc', case sum(clicks) when 0 then 0 else sum(media_cost) / sum(clicks) end,
          'ctr', case sum(imps) when 0 then 0 else sum(clicks)::float / sum(imps) end
        )
        from site_domain_performance_report tt
        where
          ads.advertiser_id=tt.advertiser_id
        and
          (("day" >= date_trunc('day',current_timestamp::timestamp without time zone - interval '1 day')
            and
            "day" <= current_timestamp::timestamp without time zone)
          or
           ("hour" >= date_trunc('day',current_timestamp::timestamp without time zone - interval '1 day')
            and
            "hour" <= current_timestamp::timestamp without time zone))
        group by "day"
        order by "day"
      ))
    from (
           select distinct advertiser_id from site_domain_performance_report
            where
            (("day" >= date_trunc('day',current_timestamp::timestamp without time zone - interval '1 day')
                    and
                    "day" <= current_timestamp::timestamp without time zone)
                  or
                   ("hour" >= date_trunc('day',current_timestamp::timestamp without time zone - interval '1 day')
                    and
                    "hour" <= current_timestamp::timestamp without time zone)))ads;
                            """),

        migrations.RunSQL("""
      insert into ui_usual_advertisers_graph as ut (
        advertiser_id,
        type,
        day_chart)
      select
      ads.advertiser_id,
      'last_3_days',
      array_to_json(array(
        select json_build_object(
          'day', "day",
          'imp', sum(imps),
          'spend', sum(media_cost),
          'clicks', sum(clicks),
          'conversions', sum(post_click_convs) + sum(post_view_convs),
          'cvr', case sum(imps) when 0 then 0 else (sum(post_click_convs) + sum(post_view_convs)) / sum(imps)::float end,
          'cpc', case sum(clicks) when 0 then 0 else sum(media_cost) / sum(clicks) end,
          'ctr', case sum(imps) when 0 then 0 else sum(clicks)::float / sum(imps) end
        )
        from site_domain_performance_report tt
        where
          ads.advertiser_id=tt.advertiser_id
        and
          (("day" >= date_trunc('day',current_timestamp::timestamp without time zone - interval '3 day')
            and
            "day" <= current_timestamp::timestamp without time zone)
          or
           ("hour" >= date_trunc('day',current_timestamp::timestamp without time zone - interval '3 day')
            and
            "hour" <= current_timestamp::timestamp without time zone))
        group by "day"
        order by "day"
      ))
    from (
           select distinct advertiser_id from site_domain_performance_report
            where
            (("day" >= date_trunc('day',current_timestamp::timestamp without time zone - interval '3 day')
                    and
                    "day" <= current_timestamp::timestamp without time zone)
                  or
                   ("hour" >= date_trunc('day',current_timestamp::timestamp without time zone - interval '3 day')
                    and
                    "hour" <= current_timestamp::timestamp without time zone)))ads;
                            """),

        migrations.RunSQL("""
          insert into ui_usual_advertisers_graph as ut (
            advertiser_id,
            type,
            day_chart)
          select
          ads.advertiser_id,
          'last_7_days',
          array_to_json(array(
            select json_build_object(
              'day', "day",
              'imp', sum(imps),
              'spend', sum(media_cost),
              'clicks', sum(clicks),
              'conversions', sum(post_click_convs) + sum(post_view_convs),
              'cvr', case sum(imps) when 0 then 0 else (sum(post_click_convs) + sum(post_view_convs)) / sum(imps)::float end,
              'cpc', case sum(clicks) when 0 then 0 else sum(media_cost) / sum(clicks) end,
              'ctr', case sum(imps) when 0 then 0 else sum(clicks)::float / sum(imps) end
            )
            from site_domain_performance_report tt
            where
              ads.advertiser_id=tt.advertiser_id
            and
              (("day" >= date_trunc('day',current_timestamp::timestamp without time zone - interval '7 day')
                and
                "day" <= current_timestamp::timestamp without time zone)
              or
               ("hour" >= date_trunc('day',current_timestamp::timestamp without time zone - interval '7 day')
                and
                "hour" <= current_timestamp::timestamp without time zone))
            group by "day"
            order by "day"
          ))
        from (
               select distinct advertiser_id from site_domain_performance_report
                where
                (("day" >= date_trunc('day',current_timestamp::timestamp without time zone - interval '7 day')
                        and
                        "day" <= current_timestamp::timestamp without time zone)
                      or
                       ("hour" >= date_trunc('day',current_timestamp::timestamp without time zone - interval '7 day')
                        and
                        "hour" <= current_timestamp::timestamp without time zone)))ads;
                                """),

        migrations.RunSQL("""
          insert into ui_usual_advertisers_graph as ut (
            advertiser_id,
            type,
            day_chart)
          select
          ads.advertiser_id,
          'last_14_days',
          array_to_json(array(
            select json_build_object(
              'day', "day",
              'imp', sum(imps),
              'spend', sum(media_cost),
              'clicks', sum(clicks),
              'conversions', sum(post_click_convs) + sum(post_view_convs),
              'cvr', case sum(imps) when 0 then 0 else (sum(post_click_convs) + sum(post_view_convs)) / sum(imps)::float end,
              'cpc', case sum(clicks) when 0 then 0 else sum(media_cost) / sum(clicks) end,
              'ctr', case sum(imps) when 0 then 0 else sum(clicks)::float / sum(imps) end
            )
            from site_domain_performance_report tt
            where
              ads.advertiser_id=tt.advertiser_id
            and
              (("day" >= date_trunc('day',current_timestamp::timestamp without time zone - interval '14 day')
                and
                "day" <= current_timestamp::timestamp without time zone)
              or
               ("hour" >= date_trunc('day',current_timestamp::timestamp without time zone - interval '14 day')
                and
                "hour" <= current_timestamp::timestamp without time zone))
            group by "day"
            order by "day"
          ))
        from (
               select distinct advertiser_id from site_domain_performance_report
                where
                (("day" >= date_trunc('day',current_timestamp::timestamp without time zone - interval '14 day')
                        and
                        "day" <= current_timestamp::timestamp without time zone)
                      or
                       ("hour" >= date_trunc('day',current_timestamp::timestamp without time zone - interval '14 day')
                        and
                        "hour" <= current_timestamp::timestamp without time zone)))ads;
                                """),

        migrations.RunSQL("""
          insert into ui_usual_advertisers_graph as ut (
            advertiser_id,
            type,
            day_chart)
          select
          ads.advertiser_id,
          'last_21_days',
          array_to_json(array(
            select json_build_object(
              'day', "day",
              'imp', sum(imps),
              'spend', sum(media_cost),
              'clicks', sum(clicks),
              'conversions', sum(post_click_convs) + sum(post_view_convs),
              'cvr', case sum(imps) when 0 then 0 else (sum(post_click_convs) + sum(post_view_convs)) / sum(imps)::float end,
              'cpc', case sum(clicks) when 0 then 0 else sum(media_cost) / sum(clicks) end,
              'ctr', case sum(imps) when 0 then 0 else sum(clicks)::float / sum(imps) end
            )
            from site_domain_performance_report tt
            where
              ads.advertiser_id=tt.advertiser_id
            and
              (("day" >= date_trunc('day',current_timestamp::timestamp without time zone - interval '21 day')
                and
                "day" <= current_timestamp::timestamp without time zone)
              or
               ("hour" >= date_trunc('day',current_timestamp::timestamp without time zone - interval '21 day')
                and
                "hour" <= current_timestamp::timestamp without time zone))
            group by "day"
            order by "day"
          ))
        from (
               select distinct advertiser_id from site_domain_performance_report
                where
                (("day" >= date_trunc('day',current_timestamp::timestamp without time zone - interval '21 day')
                        and
                        "day" <= current_timestamp::timestamp without time zone)
                      or
                       ("hour" >= date_trunc('day',current_timestamp::timestamp without time zone - interval '21 day')
                        and
                        "hour" <= current_timestamp::timestamp without time zone)))ads;
                                """),

        migrations.RunSQL("""
          insert into ui_usual_advertisers_graph as ut (
            advertiser_id,
            type,
            day_chart)
          select
          ads.advertiser_id,
          'last_90_days',
          array_to_json(array(
            select json_build_object(
              'day', "day",
              'imp', sum(imps),
              'spend', sum(media_cost),
              'clicks', sum(clicks),
              'conversions', sum(post_click_convs) + sum(post_view_convs),
              'cvr', case sum(imps) when 0 then 0 else (sum(post_click_convs) + sum(post_view_convs)) / sum(imps)::float end,
              'cpc', case sum(clicks) when 0 then 0 else sum(media_cost) / sum(clicks) end,
              'ctr', case sum(imps) when 0 then 0 else sum(clicks)::float / sum(imps) end
            )
            from site_domain_performance_report tt
            where
              ads.advertiser_id=tt.advertiser_id
            and
              (("day" >= date_trunc('day',current_timestamp::timestamp without time zone - interval '90 day')
                and
                "day" <= current_timestamp::timestamp without time zone)
              or
               ("hour" >= date_trunc('day',current_timestamp::timestamp without time zone - interval '90 day')
                and
                "hour" <= current_timestamp::timestamp without time zone))
            group by "day"
            order by "day"
          ))
        from (
               select distinct advertiser_id from site_domain_performance_report
                where
                (("day" >= date_trunc('day',current_timestamp::timestamp without time zone - interval '90 day')
                        and
                        "day" <= current_timestamp::timestamp without time zone)
                      or
                       ("hour" >= date_trunc('day',current_timestamp::timestamp without time zone - interval '90 day')
                        and
                        "hour" <= current_timestamp::timestamp without time zone)))ads;
                                """),

        migrations.RunSQL("""
              insert into ui_usual_advertisers_graph as ut (
                advertiser_id,
                type,
                day_chart)
              select
              ads.advertiser_id,
              'last_month',
              array_to_json(array(
                select json_build_object(
                  'day', "day",
                  'imp', sum(imps),
                  'spend', sum(media_cost),
                  'clicks', sum(clicks),
                  'conversions', sum(post_click_convs) + sum(post_view_convs),
                  'cvr', case sum(imps) when 0 then 0 else (sum(post_click_convs) + sum(post_view_convs)) / sum(imps)::float end,
                  'cpc', case sum(clicks) when 0 then 0 else sum(media_cost) / sum(clicks) end,
                  'ctr', case sum(imps) when 0 then 0 else sum(clicks)::float / sum(imps) end
                )
                from site_domain_performance_report tt
                where
                  ads.advertiser_id=tt.advertiser_id
                and
                  (("day" >= date_trunc('month',current_timestamp::timestamp without time zone - interval '1 month')
                    and
                    "day" < date_trunc('month',current_timestamp::timestamp without time zone))
                  or
                   ("hour" >= date_trunc('month',current_timestamp::timestamp without time zone - interval '1 month')
                    and
                    "hour" < date_trunc('month',current_timestamp::timestamp without time zone)))
                group by "day"
                order by "day"
              ))
            from (
                   select distinct advertiser_id from site_domain_performance_report
                    where
                    (("day" >= date_trunc('month',current_timestamp::timestamp without time zone - interval '1 month')
                            and
                            "day" < date_trunc('month',current_timestamp::timestamp without time zone))
                          or
                           ("hour" >= date_trunc('month',current_timestamp::timestamp without time zone - interval '1 month')
                            and
                            "hour" < date_trunc('month',current_timestamp::timestamp without time zone))))ads;
                                    """),

        migrations.RunSQL("""
              insert into ui_usual_advertisers_graph as ut (
                advertiser_id,
                type,
                day_chart)
              select
              ads.advertiser_id,
              'cur_month',
              array_to_json(array(
                select json_build_object(
                  'day', "day",
                  'imp', sum(imps),
                  'spend', sum(media_cost),
                  'clicks', sum(clicks),
                  'conversions', sum(post_click_convs) + sum(post_view_convs),
                  'cvr', case sum(imps) when 0 then 0 else (sum(post_click_convs) + sum(post_view_convs)) / sum(imps)::float end,
                  'cpc', case sum(clicks) when 0 then 0 else sum(media_cost) / sum(clicks) end,
                  'ctr', case sum(imps) when 0 then 0 else sum(clicks)::float / sum(imps) end
                )
                from site_domain_performance_report tt
                where
                  ads.advertiser_id=tt.advertiser_id
                and
                  (("day" >= date_trunc('month',current_timestamp::timestamp without time zone)
                    and
                    "day" <= current_timestamp::timestamp without time zone)
                  or
                   ("hour" >= date_trunc('month',current_timestamp::timestamp without time zone)
                    and
                    "hour" <= current_timestamp::timestamp without time zone))
                group by "day"
                order by "day"
              ))
            from (
                   select distinct advertiser_id from site_domain_performance_report
                    where
                    (("day" >= date_trunc('month',current_timestamp::timestamp without time zone)
                            and
                            "day" <= current_timestamp::timestamp without time zone)
                          or
                           ("hour" >= date_trunc('month',current_timestamp::timestamp without time zone)
                            and
                            "hour" <= current_timestamp::timestamp without time zone)))ads;
                                    """),

        migrations.RunSQL("delete from ui_usual_placements_graph"),

        migrations.RunSQL("""
insert into ui_usual_placements_graph as ut (
    campaign_id,
    type,
    day_chart)
  select
  camps.campaign_id,
  'all',
  array_to_json(array(
    select json_build_object(
      'day', "hour"::timestamp::date,
      'impression', sum(imps),
      'mediaspent', sum("cost"),
      'clicks', sum(clicks),
      'conversions', sum(total_convs),
      'cpa', case sum(total_convs) when 0 then 0 else sum("cost") / sum(total_convs) end,
      'cpc', case sum(clicks) when 0 then 0 else sum("cost") / sum(clicks) end,
      'ctr', case sum(imps) when 0 then 0 else sum(clicks)::float / sum(imps) end
    )
    from network_analytics_report_by_placement tt
    where
    camps.campaign_id=tt.campaign_id and
      "hour" >= '1970-01-01 00:00:00'
    and
      "hour" <= current_timestamp::timestamp without time zone
    group by "hour"::timestamp::date
    order by "hour"::timestamp::date
  ))
from (
       select distinct campaign_id from network_analytics_report_by_placement
       where
       "hour" >= '1970-01-01 00:00:00'
       and
       "hour" <= current_timestamp::timestamp without time zone) camps;
                    """),

        migrations.RunSQL("""
    insert into ui_usual_placements_graph as ut (
        campaign_id,
        type,
        day_chart)
      select
      camps.campaign_id,
      'yesterday',
      array_to_json(array(
        select json_build_object(
          'day', "hour"::timestamp::date,
          'impression', sum(imps),
          'mediaspent', sum("cost"),
          'clicks', sum(clicks),
          'conversions', sum(total_convs),
          'cpa', case sum(total_convs) when 0 then 0 else sum("cost") / sum(total_convs) end,
          'cpc', case sum(clicks) when 0 then 0 else sum("cost") / sum(clicks) end,
          'ctr', case sum(imps) when 0 then 0 else sum(clicks)::float / sum(imps) end
        )
        from network_analytics_report_by_placement tt
        where
        camps.campaign_id=tt.campaign_id and
          "hour" >= date_trunc('day',current_timestamp::timestamp without time zone - interval '1 day')
        and
          "hour" <= current_timestamp::timestamp without time zone
        group by "hour"::timestamp::date
        order by "hour"::timestamp::date
      ))
    from (
           select distinct campaign_id from network_analytics_report_by_placement
           where
           "hour" >= date_trunc('day',current_timestamp::timestamp without time zone - interval '1 day')
           and
           "hour" <= current_timestamp::timestamp without time zone) camps;
                        """),

        migrations.RunSQL("""
        insert into ui_usual_placements_graph as ut (
            campaign_id,
            type,
            day_chart)
          select
          camps.campaign_id,
          'last_3_days',
          array_to_json(array(
            select json_build_object(
              'day', "hour"::timestamp::date,
              'impression', sum(imps),
              'mediaspent', sum("cost"),
              'clicks', sum(clicks),
              'conversions', sum(total_convs),
              'cpa', case sum(total_convs) when 0 then 0 else sum("cost") / sum(total_convs) end,
              'cpc', case sum(clicks) when 0 then 0 else sum("cost") / sum(clicks) end,
              'ctr', case sum(imps) when 0 then 0 else sum(clicks)::float / sum(imps) end
            )
            from network_analytics_report_by_placement tt
            where
            camps.campaign_id=tt.campaign_id and
              "hour" >= date_trunc('day',current_timestamp::timestamp without time zone - interval '3 day')
            and
              "hour" <= current_timestamp::timestamp without time zone
            group by "hour"::timestamp::date
            order by "hour"::timestamp::date
          ))
        from (
               select distinct campaign_id from network_analytics_report_by_placement
               where
               "hour" >= date_trunc('day',current_timestamp::timestamp without time zone - interval '3 day')
               and
               "hour" <= current_timestamp::timestamp without time zone) camps;
                            """),

        migrations.RunSQL("""
        insert into ui_usual_placements_graph as ut (
            campaign_id,
            type,
            day_chart)
          select
          camps.campaign_id,
          'last_7_days',
          array_to_json(array(
            select json_build_object(
              'day', "hour"::timestamp::date,
              'impression', sum(imps),
              'mediaspent', sum("cost"),
              'clicks', sum(clicks),
              'conversions', sum(total_convs),
              'cpa', case sum(total_convs) when 0 then 0 else sum("cost") / sum(total_convs) end,
              'cpc', case sum(clicks) when 0 then 0 else sum("cost") / sum(clicks) end,
              'ctr', case sum(imps) when 0 then 0 else sum(clicks)::float / sum(imps) end
            )
            from network_analytics_report_by_placement tt
            where
            camps.campaign_id=tt.campaign_id and
              "hour" >= date_trunc('day',current_timestamp::timestamp without time zone - interval '7 day')
            and
              "hour" <= current_timestamp::timestamp without time zone
            group by "hour"::timestamp::date
            order by "hour"::timestamp::date
          ))
        from (
               select distinct campaign_id from network_analytics_report_by_placement
               where
               "hour" >= date_trunc('day',current_timestamp::timestamp without time zone - interval '7 day')
               and
               "hour" <= current_timestamp::timestamp without time zone) camps;
                            """),

        migrations.RunSQL("""
        insert into ui_usual_placements_graph as ut (
            campaign_id,
            type,
            day_chart)
          select
          camps.campaign_id,
          'last_14_days',
          array_to_json(array(
            select json_build_object(
              'day', "hour"::timestamp::date,
              'impression', sum(imps),
              'mediaspent', sum("cost"),
              'clicks', sum(clicks),
              'conversions', sum(total_convs),
              'cpa', case sum(total_convs) when 0 then 0 else sum("cost") / sum(total_convs) end,
              'cpc', case sum(clicks) when 0 then 0 else sum("cost") / sum(clicks) end,
              'ctr', case sum(imps) when 0 then 0 else sum(clicks)::float / sum(imps) end
            )
            from network_analytics_report_by_placement tt
            where
            camps.campaign_id=tt.campaign_id and
              "hour" >= date_trunc('day',current_timestamp::timestamp without time zone - interval '14 day')
            and
              "hour" <= current_timestamp::timestamp without time zone
            group by "hour"::timestamp::date
            order by "hour"::timestamp::date
          ))
        from (
               select distinct campaign_id from network_analytics_report_by_placement
               where
               "hour" >= date_trunc('day',current_timestamp::timestamp without time zone - interval '14 day')
               and
               "hour" <= current_timestamp::timestamp without time zone) camps;
                            """),

        migrations.RunSQL("""
        insert into ui_usual_placements_graph as ut (
            campaign_id,
            type,
            day_chart)
          select
          camps.campaign_id,
          'last_21_days',
          array_to_json(array(
            select json_build_object(
              'day', "hour"::timestamp::date,
              'impression', sum(imps),
              'mediaspent', sum("cost"),
              'clicks', sum(clicks),
              'conversions', sum(total_convs),
              'cpa', case sum(total_convs) when 0 then 0 else sum("cost") / sum(total_convs) end,
              'cpc', case sum(clicks) when 0 then 0 else sum("cost") / sum(clicks) end,
              'ctr', case sum(imps) when 0 then 0 else sum(clicks)::float / sum(imps) end
            )
            from network_analytics_report_by_placement tt
            where
            camps.campaign_id=tt.campaign_id and
              "hour" >= date_trunc('day',current_timestamp::timestamp without time zone - interval '21 day')
            and
              "hour" <= current_timestamp::timestamp without time zone
            group by "hour"::timestamp::date
            order by "hour"::timestamp::date
          ))
        from (
               select distinct campaign_id from network_analytics_report_by_placement
               where
               "hour" >= date_trunc('day',current_timestamp::timestamp without time zone - interval '21 day')
               and
               "hour" <= current_timestamp::timestamp without time zone) camps;
                            """),

        migrations.RunSQL("""
            insert into ui_usual_placements_graph as ut (
                campaign_id,
                type,
                day_chart)
              select
              camps.campaign_id,
              'last_90_days',
              array_to_json(array(
                select json_build_object(
                  'day', "hour"::timestamp::date,
                  'impression', sum(imps),
                  'mediaspent', sum("cost"),
                  'clicks', sum(clicks),
                  'conversions', sum(total_convs),
                  'cpa', case sum(total_convs) when 0 then 0 else sum("cost") / sum(total_convs) end,
                  'cpc', case sum(clicks) when 0 then 0 else sum("cost") / sum(clicks) end,
                  'ctr', case sum(imps) when 0 then 0 else sum(clicks)::float / sum(imps) end
                )
                from network_analytics_report_by_placement tt
                where
                camps.campaign_id=tt.campaign_id and
                  "hour" >= date_trunc('day',current_timestamp::timestamp without time zone - interval '90 day')
                and
                  "hour" <= current_timestamp::timestamp without time zone
                group by "hour"::timestamp::date
                order by "hour"::timestamp::date
              ))
            from (
                   select distinct campaign_id from network_analytics_report_by_placement
                   where
                   "hour" >= date_trunc('day',current_timestamp::timestamp without time zone - interval '90 day')
                   and
                   "hour" <= current_timestamp::timestamp without time zone) camps;
                                """),

        migrations.RunSQL("""
                insert into ui_usual_placements_graph as ut (
                    campaign_id,
                    type,
                    day_chart)
                  select
                  camps.campaign_id,
                  'last_month',
                  array_to_json(array(
                    select json_build_object(
                      'day', "hour"::timestamp::date,
                      'impression', sum(imps),
                      'mediaspent', sum("cost"),
                      'clicks', sum(clicks),
                      'conversions', sum(total_convs),
                      'cpa', case sum(total_convs) when 0 then 0 else sum("cost") / sum(total_convs) end,
                      'cpc', case sum(clicks) when 0 then 0 else sum("cost") / sum(clicks) end,
                      'ctr', case sum(imps) when 0 then 0 else sum(clicks)::float / sum(imps) end
                    )
                    from network_analytics_report_by_placement tt
                    where
                    camps.campaign_id=tt.campaign_id and
                      "hour" >= date_trunc('month',current_timestamp::timestamp without time zone - interval '1 month')
                    and
                      "hour" < date_trunc('month',current_timestamp::timestamp without time zone)
                    group by "hour"::timestamp::date
                    order by "hour"::timestamp::date
                  ))
                from (
                       select distinct campaign_id from network_analytics_report_by_placement
                       where
                       "hour" >= date_trunc('month',current_timestamp::timestamp without time zone - interval '1 month')
                       and
                       "hour" < date_trunc('month',current_timestamp::timestamp without time zone)) camps;
                                    """),

        migrations.RunSQL("""
                insert into ui_usual_placements_graph as ut (
                    campaign_id,
                    type,
                    day_chart)
                  select
                  camps.campaign_id,
                  'cur_month',
                  array_to_json(array(
                    select json_build_object(
                      'day', "hour"::timestamp::date,
                      'impression', sum(imps),
                      'mediaspent', sum("cost"),
                      'clicks', sum(clicks),
                      'conversions', sum(total_convs),
                      'cpa', case sum(total_convs) when 0 then 0 else sum("cost") / sum(total_convs) end,
                      'cpc', case sum(clicks) when 0 then 0 else sum("cost") / sum(clicks) end,
                      'ctr', case sum(imps) when 0 then 0 else sum(clicks)::float / sum(imps) end
                    )
                    from network_analytics_report_by_placement tt
                    where
                    camps.campaign_id=tt.campaign_id and
                      "hour" >= date_trunc('month',current_timestamp::timestamp without time zone)
                    and
                      "hour" <= current_timestamp::timestamp without time zone
                    group by "hour"::timestamp::date
                    order by "hour"::timestamp::date
                  ))
                from (
                       select distinct campaign_id from network_analytics_report_by_placement
                       where
                       "hour" >= date_trunc('month',current_timestamp::timestamp without time zone)
                       and
                       "hour" <= current_timestamp::timestamp without time zone) camps;
                                    """),

    ]
