# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2017-03-28 14:23
from __future__ import unicode_literals

from django.db import migrations


class Migration(migrations.Migration):
    dependencies = [
        ('rtb', '0164_merge_20170328_1423'),
    ]

    operations = [
        migrations.RunSQL("""
            DROP VIEW view_rule_type_usual;
        """),
        migrations.RunSQL("""
            DROP VIEW view_rule_type_tracker;
        """),
        migrations.RunSQL("""
            CREATE VIEW view_rule_type_tracker AS SELECT
  data_grid.campaign_id,
  data_grid.placement_id,
  coalesce(data_grid.imps,0) as impressions,
  coalesce(data_grid.conversions,0) as conversions,
  coalesce(data_grid.clicks,0) as clicks,
  coalesce(data_grid.spent,0) as spent,
  CASE coalesce(data_grid.conversions,0) WHEN 0 THEN (0)::double precision
    ELSE ((coalesce(data_grid.spent,0))::double precision / (coalesce(data_grid.conversions,0))::double precision)
  END AS cpa,
  CASE coalesce(data_grid.imps,0) WHEN 0 THEN 0.0 ELSE ((coalesce(data_grid.conversions,0))::double precision / (coalesce(data_grid.imps,0))) END AS cvr,
  case coalesce(data_grid.clicks,0) when 0 then 0 else (coalesce(data_grid.spent,0)) / (coalesce(data_grid.clicks,0)) end as cpc,
  case coalesce(data_grid.imps,0) when 0 then 0 else (coalesce(data_grid.clicks,0) / (coalesce(data_grid.imps,0))) end as ctr,
  kmeansecomm.good as predictionecomm,
  kmeansleadgen.good as predictionleadgen
FROM ui_usual_placements_grid_data_all_tracker as data_grid
LEFT JOIN ( SELECT ml_placements_clusters_kmeans.placement_id,
            ml_placements_clusters_kmeans.good
           FROM ml_placements_clusters_kmeans
          WHERE ((ml_placements_clusters_kmeans.day = 7) AND (ml_placements_clusters_kmeans.test_number = 2) and ml_placements_clusters_kmeans.adv_type='ecommerceAd')) kmeansecomm ON ((data_grid.placement_id = kmeansecomm.placement_id))
LEFT JOIN ( SELECT ml_placements_clusters_kmeans.placement_id,
            ml_placements_clusters_kmeans.good
           FROM ml_placements_clusters_kmeans
          WHERE ((ml_placements_clusters_kmeans.day = 7) AND (ml_placements_clusters_kmeans.test_number = 2) and ml_placements_clusters_kmeans.adv_type='leadGenerationAd')) kmeansleadgen ON ((data_grid.placement_id = kmeansleadgen.placement_id));
        """),
        migrations.RunSQL("""
        CREATE VIEW view_rule_type_report AS SELECT
  data_grid.campaign_id,
  data_grid.placement_id,
  coalesce(data_grid.imps,0) as impressions,
  coalesce(data_grid.conversions,0) as conversions,
  coalesce(data_grid.clicks,0) as clicks,
  coalesce(data_grid.spent,0) as spent,
  CASE coalesce(data_grid.conversions,0) WHEN 0 THEN (0)::double precision
    ELSE ((coalesce(data_grid.spent,0))::double precision / (coalesce(data_grid.conversions,0))::double precision)
  END AS cpa,
  CASE coalesce(data_grid.imps,0) WHEN 0 THEN 0.0 ELSE ((coalesce(data_grid.conversions,0))::double precision / (coalesce(data_grid.imps,0))) END AS cvr,
  case coalesce(data_grid.clicks,0) when 0 then 0 else (coalesce(data_grid.spent,0)) / (coalesce(data_grid.clicks,0)) end as cpc,
  case coalesce(data_grid.imps,0) when 0 then 0 else (coalesce(data_grid.clicks,0) / (coalesce(data_grid.imps,0))) end as ctr,
  kmeansecomm.good as predictionecomm,
  kmeansleadgen.good as predictionleadgen
FROM ui_usual_placements_grid_data_all as data_grid
LEFT JOIN ( SELECT ml_placements_clusters_kmeans.placement_id,
            ml_placements_clusters_kmeans.good
           FROM ml_placements_clusters_kmeans
          WHERE ((ml_placements_clusters_kmeans.day = 7) AND (ml_placements_clusters_kmeans.test_number = 2) and ml_placements_clusters_kmeans.adv_type='ecommerceAd')) kmeansecomm ON ((data_grid.placement_id = kmeansecomm.placement_id))
LEFT JOIN ( SELECT ml_placements_clusters_kmeans.placement_id,
            ml_placements_clusters_kmeans.good
           FROM ml_placements_clusters_kmeans
          WHERE ((ml_placements_clusters_kmeans.day = 7) AND (ml_placements_clusters_kmeans.test_number = 2) and ml_placements_clusters_kmeans.adv_type='leadGenerationAd')) kmeansleadgen ON ((data_grid.placement_id = kmeansleadgen.placement_id));
        """),
        migrations.RunSQL("""
        CREATE VIEW view_rule_unsuspend_type_report AS SELECT
  unsus.campaign_id,
  unsus.placement_id,
  coalesce(data_grid.imps,0)-coalesce(unsus.imps,0) as impressions,
  coalesce(data_grid.conversions,0)-coalesce(unsus.conversions,0) as conversions,
  coalesce(data_grid.clicks,0)-coalesce(unsus.clicks,0) as clicks,
  coalesce(data_grid.spent,0)-coalesce(unsus.spent,0) as spent,
  CASE coalesce(data_grid.conversions-unsus.conversions,0) WHEN 0 THEN (0)::double precision
    ELSE ((coalesce(data_grid.spent,0)-coalesce(unsus.spent,0))::double precision / (coalesce(data_grid.conversions,0)-coalesce(unsus.conversions,0))::double precision)
  END AS cpa,
  CASE coalesce(data_grid.imps,0)-coalesce(unsus.imps, 0) WHEN 0 THEN 0.0 ELSE ((coalesce(data_grid.conversions,0)-coalesce(unsus.conversions,0))::double precision / (coalesce(data_grid.imps,0)-coalesce(unsus.imps,0))::double precision) END AS cvr,
  case coalesce(data_grid.clicks,0)-coalesce(unsus.clicks,0) when 0 then 0 else (coalesce(data_grid.spent,0)-coalesce(unsus.spent,0)) / (coalesce(data_grid.clicks,0)-coalesce(unsus.clicks,0)) end as cpc,
  case coalesce(data_grid.imps,0)-coalesce(unsus.imps,0) when 0 then 0 else (coalesce(data_grid.clicks,0)-coalesce(unsus.clicks,0))::float / (coalesce(data_grid.imps,0)-coalesce(unsus.imps,0)) end as ctr,
  kmeansecomm.good as predictionecomm,
  kmeansleadgen.good as predictionleadgen
FROM placement_state_unsuspend as unsus
LEFT JOIN ui_usual_placements_grid_data_all as data_grid ON data_grid.placement_id = unsus.placement_id AND data_grid.campaign_id = unsus.campaign_id
LEFT JOIN ( SELECT ml_placements_clusters_kmeans.placement_id,
            ml_placements_clusters_kmeans.good
           FROM ml_placements_clusters_kmeans
          WHERE ((ml_placements_clusters_kmeans.day = 7) AND (ml_placements_clusters_kmeans.test_number = 2) and ml_placements_clusters_kmeans.adv_type='ecommerceAd')) kmeansecomm ON ((unsus.placement_id = kmeansecomm.placement_id))
LEFT JOIN ( SELECT ml_placements_clusters_kmeans.placement_id,
            ml_placements_clusters_kmeans.good
           FROM ml_placements_clusters_kmeans
          WHERE ((ml_placements_clusters_kmeans.day = 7) AND (ml_placements_clusters_kmeans.test_number = 2) and ml_placements_clusters_kmeans.adv_type='leadGenerationAd')) kmeansleadgen ON ((unsus.placement_id = kmeansleadgen.placement_id));
        """),

        migrations.RunSQL("""
        CREATE VIEW view_rule_unsuspend_type_tracker AS SELECT
  unsus.campaign_id,
  unsus.placement_id,
  coalesce(data_grid.imps,0)-coalesce(unsus.imps,0) as impressions,
  coalesce(data_grid.conversions,0)-coalesce(unsus.conversions,0) as conversions,
  coalesce(data_grid.clicks,0)-coalesce(unsus.clicks,0) as clicks,
  coalesce(data_grid.spent,0)-coalesce(unsus.spent,0) as spent,
  CASE coalesce(data_grid.conversions-unsus.conversions,0) WHEN 0 THEN (0)::double precision
    ELSE ((coalesce(data_grid.spent,0)-coalesce(unsus.spent,0))::double precision / (coalesce(data_grid.conversions,0)-coalesce(unsus.conversions,0))::double precision)
  END AS cpa,
  CASE coalesce(data_grid.imps,0)-coalesce(unsus.imps, 0) WHEN 0 THEN 0.0 ELSE ((coalesce(data_grid.conversions,0)-coalesce(unsus.conversions,0))::double precision / (coalesce(data_grid.imps,0)-coalesce(unsus.imps,0))::double precision) END AS cvr,
  case coalesce(data_grid.clicks,0)-coalesce(unsus.clicks,0) when 0 then 0 else (coalesce(data_grid.spent,0)-coalesce(unsus.spent,0)) / (coalesce(data_grid.clicks,0)-coalesce(unsus.clicks,0)) end as cpc,
  case coalesce(data_grid.imps,0)-coalesce(unsus.imps,0) when 0 then 0 else (coalesce(data_grid.clicks,0)-coalesce(unsus.clicks,0))::float / (coalesce(data_grid.imps,0)-coalesce(unsus.imps,0)) end as ctr,
  kmeansecomm.good as predictionecomm,
  kmeansleadgen.good as predictionleadgen
FROM placement_state_unsuspend as unsus
LEFT JOIN ui_usual_placements_grid_data_all_tracker as data_grid ON data_grid.placement_id = unsus.placement_id AND data_grid.campaign_id = unsus.campaign_id
LEFT JOIN ( SELECT ml_placements_clusters_kmeans.placement_id,
            ml_placements_clusters_kmeans.good
           FROM ml_placements_clusters_kmeans
          WHERE ((ml_placements_clusters_kmeans.day = 7) AND (ml_placements_clusters_kmeans.test_number = 2) and ml_placements_clusters_kmeans.adv_type='ecommerceAd')) kmeansecomm ON ((unsus.placement_id = kmeansecomm.placement_id))
LEFT JOIN ( SELECT ml_placements_clusters_kmeans.placement_id,
            ml_placements_clusters_kmeans.good
           FROM ml_placements_clusters_kmeans
          WHERE ((ml_placements_clusters_kmeans.day = 7) AND (ml_placements_clusters_kmeans.test_number = 2) and ml_placements_clusters_kmeans.adv_type='leadGenerationAd')) kmeansleadgen ON ((unsus.placement_id = kmeansleadgen.placement_id));
        """)
    ]

