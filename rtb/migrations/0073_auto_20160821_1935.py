# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-08-21 19:35
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('rtb', '0072_auto_20160821_1827'),
    ]

    operations = [
        migrations.CreateModel(
            name='CampaignCreativeHTML',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('campaign', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='rtb.Campaign')),
            ],
            options={
                'db_table': 'campaign_creative_html',
            },
        ),
        migrations.CreateModel(
            name='CampaignCreativeVAST',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('campaign', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='rtb.Campaign')),
            ],
            options={
                'db_table': 'campaign_creative_vast',
            },
        ),
        migrations.CreateModel(
            name='CreativeHTML',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('fetch_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('code', models.TextField(blank=True, db_index=True, null=True)),
                ('code2', models.TextField(blank=True, db_index=True, null=True)),
                ('name', models.TextField(blank=True, db_index=True, null=True)),
                ('type', models.TextField(blank=True, choices=[(b'standard', b'standard'), (b'html', b'html'), (b'video', b'video')], null=True)),
                ('state', models.TextField(blank=True, choices=[(b'active', b'Active'), (b'inactive', b'Inactive')], null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('click_track_result', models.TextField(blank=True, choices=[(b'not_tested', b'not_tested'), (b'passed', b'passed'), (b'failed', b'failed')], null=True)),
                ('media_url', models.TextField(blank=True, null=True)),
                ('media_url_secure', models.TextField(blank=True, null=True)),
                ('click_url', models.TextField(blank=True, null=True)),
                ('file_name', models.TextField(blank=True, null=True)),
                ('audit_status', models.TextField(blank=True, null=True)),
                ('audit_feedback', models.TextField(blank=True, null=True)),
                ('allow_audit', models.NullBooleanField()),
                ('ssl_status', models.TextField(blank=True, choices=[(b'disabled', b'disabled'), (b'pending', b'pending'), (b'approved', b'approved'), (b'failed', b'failed')], null=True)),
                ('allow_ssl_audit', models.NullBooleanField()),
                ('adx_audit', models.TextField(blank=True, null=True)),
                ('facebook_audit_status', models.TextField(blank=True, choices=[(b'pending_pre_audit', b'pending_pre_audit'), (b'rejected_by_pre_audit', b'rejected_by_pre_audit'), (b'approved', b'approved'), (b'rejected', b'rejected'), (b'pending', b'pending')], null=True)),
                ('facebook_audit_feedback', models.TextField(blank=True, null=True)),
                ('is_self_audited', models.NullBooleanField()),
                ('is_expired', models.NullBooleanField()),
                ('is_prohibited', models.NullBooleanField()),
                ('is_hosted', models.NullBooleanField()),
                ('lifetime_budget', models.FloatField(blank=True, null=True)),
                ('lifetime_budget_imps', models.IntegerField(blank=True, null=True)),
                ('daily_budget', models.FloatField(blank=True, null=True)),
                ('daily_budget_imps', models.IntegerField(blank=True, null=True)),
                ('enable_pacing', models.NullBooleanField()),
                ('allow_safety_pacing', models.NullBooleanField()),
                ('track_clicks', models.NullBooleanField()),
                ('flash_backup_content', models.TextField(blank=True, null=True)),
                ('flash_backup_file_name', models.TextField(blank=True, null=True)),
                ('flash_backup_url', models.TextField(blank=True, null=True)),
                ('is_control', models.NullBooleanField()),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_modified', models.DateTimeField(default=django.utils.timezone.now)),
                ('pop_values', models.TextField(blank=True, null=True)),
                ('sla', models.IntegerField(blank=True, null=True)),
                ('sla_eta', models.DateTimeField(blank=True, null=True)),
                ('currency', models.TextField(blank=True, null=True)),
                ('first_run', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_run', models.DateTimeField(blank=True, null=True)),
                ('custom_macros', models.TextField(blank=True, null=True)),
                ('advertiser', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='rtb.Advertiser')),
                ('brand', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='rtb.Brand')),
                ('folder', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='rtb.CreativeFolder')),
                ('language', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='rtb.Language')),
                ('member', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='rtb.Member')),
                ('profile', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='rtb.Profile')),
                ('publisher', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='rtb.Publisher')),
                ('template', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='rtb.CreativeTemplate')),
            ],
            options={
                'db_table': 'creative_html',
            },
        ),
        migrations.CreateModel(
            name='CreativeHTMLAdserver',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('use_type', models.TextField(blank=True, null=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('ad_server', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='rtb.AdServer')),
                ('creative_html', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='rtb.CreativeHTML')),
            ],
            options={
                'db_table': 'creative_html_adserver',
            },
        ),
        migrations.CreateModel(
            name='CreativeHTMLCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='rtb.Category')),
                ('creative_html', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='rtb.CreativeHTML')),
            ],
            options={
                'db_table': 'creative_html_category',
            },
        ),
        migrations.CreateModel(
            name='CreativeHTMLCompetitiveBrand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='rtb.Brand')),
                ('creative_html', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='rtb.CreativeHTML')),
            ],
            options={
                'db_table': 'creative_html_competitive_brand',
            },
        ),
        migrations.CreateModel(
            name='CreativeHTMLCompetitiveCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='rtb.Category')),
                ('creative_html', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='rtb.CreativeHTML')),
            ],
            options={
                'db_table': 'creative_html_competitive_category',
            },
        ),
        migrations.CreateModel(
            name='CreativeHTMLSegment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.TextField(blank=True, choices=[(b'add on view', b'add on view'), (b'add on click', b'add on click')], null=True)),
                ('creative_html', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='rtb.CreativeHTML')),
                ('segment', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='rtb.Segment')),
            ],
            options={
                'db_table': 'creative_html_segment',
            },
        ),
        migrations.CreateModel(
            name='CreativeHTMLTechnicalAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creative_html', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='rtb.CreativeHTML')),
                ('technical_attribute', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='rtb.TechnicalAttribute')),
            ],
            options={
                'db_table': 'creative_html_technical_attribute',
            },
        ),
        migrations.CreateModel(
            name='CreativeVAST',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('fetch_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('code', models.TextField(blank=True, db_index=True, null=True)),
                ('code2', models.TextField(blank=True, db_index=True, null=True)),
                ('name', models.TextField(blank=True, db_index=True, null=True)),
                ('type', models.TextField(blank=True, choices=[(b'standard', b'standard'), (b'html', b'html'), (b'video', b'video')], null=True)),
                ('state', models.TextField(blank=True, choices=[(b'active', b'Active'), (b'inactive', b'Inactive')], null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('click_track_result', models.TextField(blank=True, choices=[(b'not_tested', b'not_tested'), (b'passed', b'passed'), (b'failed', b'failed')], null=True)),
                ('media_url', models.TextField(blank=True, null=True)),
                ('media_url_secure', models.TextField(blank=True, null=True)),
                ('click_url', models.TextField(blank=True, null=True)),
                ('file_name', models.TextField(blank=True, null=True)),
                ('audit_status', models.TextField(blank=True, null=True)),
                ('audit_feedback', models.TextField(blank=True, null=True)),
                ('allow_audit', models.NullBooleanField()),
                ('ssl_status', models.TextField(blank=True, choices=[(b'disabled', b'disabled'), (b'pending', b'pending'), (b'approved', b'approved'), (b'failed', b'failed')], null=True)),
                ('allow_ssl_audit', models.NullBooleanField()),
                ('adx_audit', models.TextField(blank=True, null=True)),
                ('facebook_audit_status', models.TextField(blank=True, choices=[(b'pending_pre_audit', b'pending_pre_audit'), (b'rejected_by_pre_audit', b'rejected_by_pre_audit'), (b'approved', b'approved'), (b'rejected', b'rejected'), (b'pending', b'pending')], null=True)),
                ('facebook_audit_feedback', models.TextField(blank=True, null=True)),
                ('is_self_audited', models.NullBooleanField()),
                ('is_expired', models.NullBooleanField()),
                ('is_prohibited', models.NullBooleanField()),
                ('is_hosted', models.NullBooleanField()),
                ('lifetime_budget', models.FloatField(blank=True, null=True)),
                ('lifetime_budget_imps', models.IntegerField(blank=True, null=True)),
                ('daily_budget', models.FloatField(blank=True, null=True)),
                ('daily_budget_imps', models.IntegerField(blank=True, null=True)),
                ('enable_pacing', models.NullBooleanField()),
                ('allow_safety_pacing', models.NullBooleanField()),
                ('track_clicks', models.NullBooleanField()),
                ('flash_backup_content', models.TextField(blank=True, null=True)),
                ('flash_backup_file_name', models.TextField(blank=True, null=True)),
                ('flash_backup_url', models.TextField(blank=True, null=True)),
                ('is_control', models.NullBooleanField()),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_modified', models.DateTimeField(default=django.utils.timezone.now)),
                ('pop_values', models.TextField(blank=True, null=True)),
                ('sla', models.IntegerField(blank=True, null=True)),
                ('sla_eta', models.DateTimeField(blank=True, null=True)),
                ('currency', models.TextField(blank=True, null=True)),
                ('first_run', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_run', models.DateTimeField(blank=True, null=True)),
                ('video_attribute', models.TextField(blank=True, null=True)),
                ('media_assets', models.TextField(blank=True, null=True)),
                ('advertiser', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='rtb.Advertiser')),
                ('brand', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='rtb.Brand')),
                ('folder', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='rtb.CreativeFolder')),
                ('language', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='rtb.Language')),
                ('member', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='rtb.Member')),
                ('profile', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='rtb.Profile')),
                ('publisher', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='rtb.Publisher')),
                ('template', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='rtb.CreativeTemplate')),
            ],
            options={
                'db_table': 'creative_vast',
            },
        ),
        migrations.CreateModel(
            name='CreativeVASTAdserver',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('use_type', models.TextField(blank=True, null=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('ad_server', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='rtb.AdServer')),
                ('creative_vast', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='rtb.CreativeVAST')),
            ],
            options={
                'db_table': 'creative_vast_adserver',
            },
        ),
        migrations.CreateModel(
            name='CreativeVASTCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='rtb.Category')),
                ('creative_vast', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='rtb.CreativeVAST')),
            ],
            options={
                'db_table': 'creative_vast_category',
            },
        ),
        migrations.CreateModel(
            name='CreativeVASTCompetitiveBrand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='rtb.Brand')),
                ('creative_vast', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='rtb.CreativeVAST')),
            ],
            options={
                'db_table': 'creative_vast_competitive_brand',
            },
        ),
        migrations.CreateModel(
            name='CreativeVASTCompetitiveCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='rtb.Category')),
                ('creative_vast', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='rtb.CreativeVAST')),
            ],
            options={
                'db_table': 'creative_vast_competitive_category',
            },
        ),
        migrations.CreateModel(
            name='CreativeVASTSegment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.TextField(blank=True, choices=[(b'add on view', b'add on view'), (b'add on click', b'add on click')], null=True)),
                ('creative_vast', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='rtb.CreativeVAST')),
                ('segment', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='rtb.Segment')),
            ],
            options={
                'db_table': 'creative_vast_segment',
            },
        ),
        migrations.CreateModel(
            name='CreativeVASTTechnicalAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creative_vast', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='rtb.CreativeVAST')),
                ('technical_attribute', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='rtb.TechnicalAttribute')),
            ],
            options={
                'db_table': 'creative_vast_technical_attribute',
            },
        ),
        migrations.CreateModel(
            name='LineItemCreativesHTML',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.TextField(blank=True, db_index=True, null=True)),
                ('creative_html', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='rtb.CreativeHTML')),
                ('line_item', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='rtb.LineItem')),
            ],
            options={
                'db_table': 'line_item_creatives_html',
            },
        ),
        migrations.CreateModel(
            name='LineItemCreativesVAST',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.TextField(blank=True, db_index=True, null=True)),
                ('creative_vast', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='rtb.CreativeVAST')),
                ('line_item', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='rtb.LineItem')),
            ],
            options={
                'db_table': 'line_item_creatives_vast',
            },
        ),
        migrations.AddField(
            model_name='campaigncreativevast',
            name='creative_vast',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='rtb.CreativeVAST'),
        ),
        migrations.AddField(
            model_name='campaigncreativehtml',
            name='creative_html',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='rtb.CreativeHTML'),
        ),
    ]
