# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-06-19 09:32
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('rtb', '0021_merge'),
    ]

    operations = [
        migrations.CreateModel(
            name='ClickTracker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('member_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('name', models.TextField(blank=True, db_index=True, null=True)),
                ('code', models.TextField(blank=True, db_index=True, null=True)),
                ('state', models.TextField(blank=True, choices=[(b'active', b'Active'), (b'inactive', b'Inactive')], null=True)),
                ('click_url', models.TextField(blank=True, db_index=True, null=True)),
                ('payment_rule_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('last_modified', models.DateTimeField()),
            ],
            options={
                'db_table': 'click_tracker',
            },
        ),
        migrations.CreateModel(
            name='ClickTrackerPlacement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('click_tracker', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.ClickTracker')),
                ('placement', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Placement')),
            ],
            options={
                'db_table': 'click_tracker_placement',
            },
        ),
        migrations.CreateModel(
            name='GoalPixel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.TextField(blank=True, db_index=True, null=True)),
                ('name', models.TextField(blank=True, db_index=True, null=True)),
                ('state', models.TextField(blank=True, choices=[(b'active', b'Active'), (b'inactive', b'Inactive')], null=True)),
                ('trigger_type', models.TextField(blank=True, choices=[(b'view', b'view'), (b'click', b'click'), (b'hybrid', b'hybrid')], null=True)),
                ('post_click_goal_target', models.FloatField(blank=True, null=True)),
                ('post_view_goal_target', models.FloatField(blank=True, null=True)),
                ('post_click_goal_threshold', models.FloatField(blank=True, null=True)),
                ('post_view_goal_threshold', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'goal_pixel',
            },
        ),
        migrations.CreateModel(
            name='ImpressionTracker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('member_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('name', models.TextField(blank=True, db_index=True, null=True)),
                ('code', models.TextField(blank=True, db_index=True, null=True)),
                ('state', models.TextField(blank=True, choices=[(b'active', b'Active'), (b'inactive', b'Inactive')], null=True)),
                ('payment_rule_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('last_modified', models.DateTimeField()),
            ],
            options={
                'db_table': 'impression_tracker',
            },
        ),
        migrations.CreateModel(
            name='ImpressionTrackerPlacement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('impression_tracker', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.ImpressionTracker')),
                ('placement', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Placement')),
            ],
            options={
                'db_table': 'impression_tracker_placement',
            },
        ),
        migrations.CreateModel(
            name='InsertionOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, db_index=True, null=True)),
                ('code', models.TextField(blank=True, db_index=True, null=True)),
                ('state', models.TextField(blank=True, choices=[(b'active', b'Active'), (b'inactive', b'Inactive')], null=True)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('last_modified', models.DateTimeField()),
                ('timezone', models.FloatField(blank=True, null=True)),
                ('currency', models.FloatField(blank=True, null=True)),
                ('comments', models.FloatField(blank=True, null=True)),
                ('billing_code', models.FloatField(blank=True, null=True)),
                ('budget_intervals', models.TextField(blank=True, null=True)),
                ('lifetime_pacing', models.NullBooleanField()),
                ('lifetime_budget', models.FloatField(blank=True, null=True)),
                ('lifetime_budget_imps', models.IntegerField(blank=True, null=True)),
                ('enable_pacing', models.NullBooleanField()),
                ('lifetime_pacing_span', models.IntegerField(blank=True, null=True)),
                ('daily_budget', models.FloatField(blank=True, null=True)),
                ('daily_budget_imps', models.FloatField(blank=True, null=True)),
                ('lifetime_pacing_pct', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'insertion_order',
            },
        ),
        migrations.CreateModel(
            name='InsertionOrderBrokerFees',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('broker_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('payment_type', models.TextField(blank=True, choices=[(b'cpm', b'cpm'), (b'revshare', b'revshare')], null=True)),
                ('value', models.FloatField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('insertion_order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.InsertionOrder')),
            ],
            options={
                'db_table': 'insertion_order_brocker_fees',
            },
        ),
        migrations.CreateModel(
            name='InsertionOrderLabel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('insertion_order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.InsertionOrder')),
            ],
            options={
                'db_table': 'insertion_order_label',
            },
        ),
        migrations.CreateModel(
            name='LineItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.TextField(blank=True, db_index=True, null=True)),
                ('name', models.TextField(blank=True, db_index=True, null=True)),
                ('state', models.TextField(blank=True, choices=[(b'active', b'Active'), (b'inactive', b'Inactive')], null=True)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('timezone', models.TextField(blank=True, null=True)),
                ('revenue_value', models.FloatField(blank=True, null=True)),
                ('revenue_type', models.TextField(blank=True, choices=[(b'none', b'none'), (b'cpm', b'cpm'), (b'cpc', b'cpc'), (b'cpa', b'cpa'), (b'cost_plus_cpm', b'cost_plus_cpm'), (b'cost_plus_margin', b'cost_plus_margin'), (b'flat_fee', b'flat_fee')], null=True)),
                ('goal_type', models.TextField(blank=True, choices=[(b'none', b'none'), (b'cpc', b'cpc'), (b'cpa', b'cpa'), (b'ctr', b'ctr')], null=True)),
                ('goal_value', models.FloatField(blank=True, null=True)),
                ('last_modified', models.DateTimeField()),
                ('click_url', models.TextField(blank=True, null=True)),
                ('currency', models.TextField(blank=True, null=True)),
                ('require_cookie_for_tracking', models.NullBooleanField()),
                ('member_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('remaining_days', models.IntegerField(blank=True, null=True)),
                ('total_days', models.IntegerField(blank=True, null=True)),
                ('manage_creative', models.NullBooleanField()),
                ('flat_fee_status', models.TextField(blank=True, choices=[(b'pending', b'pending'), (b'processing', b'processing'), (b'allocated', b'allocated'), (b'error', b'error')], null=True)),
                ('flat_fee_allocation_date', models.DateTimeField()),
                ('flat_fee_adjustment_id', models.IntegerField(blank=True, null=True)),
                ('valuation_min_margin_pct', models.FloatField(blank=True, null=True)),
                ('valuation_goal_threshold', models.FloatField(blank=True, null=True)),
                ('valuation_goal_target', models.FloatField(blank=True, null=True)),
                ('valuation_performance_offer', models.NullBooleanField()),
                ('valuation_performance_mkt_managed', models.NullBooleanField()),
                ('valuation_performance_mkt_crossnet', models.NullBooleanField()),
                ('budget_intervals', models.TextField(blank=True, null=True)),
                ('lifetime_budget', models.FloatField(blank=True, null=True)),
                ('lifetime_budget_imps', models.IntegerField(blank=True, null=True)),
                ('daily_budget', models.FloatField(blank=True, null=True)),
                ('daily_budget_imps', models.FloatField(blank=True, null=True)),
                ('enable_pacing', models.NullBooleanField()),
                ('allow_safety_pacing', models.NullBooleanField()),
                ('lifetime_pacing', models.NullBooleanField()),
                ('lifetime_pacing_span', models.IntegerField(blank=True, null=True)),
                ('lifetime_pacing_pct', models.FloatField(blank=True, null=True)),
                ('payout_margin', models.FloatField(blank=True, null=True)),
                ('first_run', models.DateTimeField()),
                ('last_run', models.DateTimeField()),
                ('expected_pacing', models.FloatField(blank=True, null=True)),
                ('total_pacing', models.FloatField(blank=True, null=True)),
                ('has_pacing_dollars', models.IntegerField(blank=True, null=True)),
                ('has_pacing_imps', models.IntegerField(blank=True, null=True)),
                ('imps_pacing_percent', models.IntegerField(blank=True, null=True)),
                ('rev_pacing_percent', models.IntegerField(blank=True, null=True)),
                ('alerts', models.TextField(blank=True, null=True)),
                ('creative_distribution_type', models.TextField(blank=True, choices=[(b'even', b'even'), (b'weighted', b'weighted'), (b'ctr-optimized', b'ctr-optimized')], null=True)),
                ('weight', models.IntegerField(blank=True, null=True)),
                ('inventory_type', models.TextField(blank=True, null=True)),
                ('priority', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'line_item',
            },
        ),
        migrations.CreateModel(
            name='LineItemBroker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('broker_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('payment_type', models.TextField(blank=True, choices=[(b'cpm', b'cpm'), (b'revshare', b'revshare')], null=True)),
                ('value', models.FloatField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('line_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.LineItem')),
            ],
            options={
                'db_table': 'line_item_broker',
            },
        ),
        migrations.CreateModel(
            name='LineItemCreatives',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creative', models.IntegerField(blank=True, db_index=True, null=True)),
                ('code', models.TextField(blank=True, db_index=True, null=True)),
                ('line_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.LineItem')),
            ],
            options={
                'db_table': 'line_item_creatives',
            },
        ),
        migrations.CreateModel(
            name='LineItemGoalPixel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('line_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.LineItem')),
                ('pixel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.GoalPixel')),
            ],
            options={
                'db_table': 'line_item_goal_pixel',
            },
        ),
        migrations.CreateModel(
            name='LineItemInsertionOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('insertion_order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.InsertionOrder')),
                ('line_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.LineItem')),
            ],
            options={
                'db_table': 'line_item_insertion_order',
            },
        ),
        migrations.CreateModel(
            name='LineItemLabel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Label')),
                ('line_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.LineItem')),
            ],
            options={
                'db_table': 'line_item_label',
            },
        ),
        migrations.RenameField(
            model_name='advertiser',
            old_name='default_brand_id',
            new_name='default_brand',
        ),
        migrations.RenameField(
            model_name='labeledobject',
            old_name='advertiser_id',
            new_name='advertiser',
        ),
        migrations.RenameField(
            model_name='lineitemconversionpixel',
            old_name='conversion_pixel',
            new_name='pixel',
        ),
        migrations.RemoveField(
            model_name='advertiser',
            name='profile_id',
        ),
        migrations.RemoveField(
            model_name='labeledobject',
            name='campaign_id',
        ),
        migrations.RemoveField(
            model_name='labeledobject',
            name='insertion_order_id',
        ),
        migrations.RemoveField(
            model_name='labeledobject',
            name='line_item_id',
        ),
        migrations.RemoveField(
            model_name='labeledobject',
            name='publisher_id',
        ),
        migrations.RemoveField(
            model_name='sitedomainperformancereport',
            name='line_item_id',
        ),
        migrations.AddField(
            model_name='advertiser',
            name='profile',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Profile'),
        ),
        migrations.AddField(
            model_name='labeledobject',
            name='campaign',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Campaign'),
        ),
        migrations.AddField(
            model_name='labeledobject',
            name='publisher',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Publisher'),
        ),
        migrations.AlterField(
            model_name='campaign',
            name='line_item_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.LineItem'),
        ),
        migrations.AlterField(
            model_name='campaignlineitems',
            name='line_item',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.LineItem'),
        ),
        migrations.AlterField(
            model_name='filteredcampaigns',
            name='campaign',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Campaign'),
        ),
        migrations.AlterField(
            model_name='filteredlineitems',
            name='line_item',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.LineItem'),
        ),
        migrations.AlterField(
            model_name='lineitemconversionpixel',
            name='line_item',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.LineItem'),
        ),
        migrations.AlterField(
            model_name='networkanalyticsreport',
            name='campaign_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Campaign'),
        ),
        migrations.AlterField(
            model_name='networkanalyticsreport',
            name='insertion_order_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.InsertionOrder'),
        ),
        migrations.AlterField(
            model_name='networkanalyticsreport',
            name='line_item_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.LineItem'),
        ),
        migrations.AlterField(
            model_name='networkanalyticsreport',
            name='placement_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Placement'),
        ),
        migrations.AlterField(
            model_name='sitedomainperformancereport',
            name='campaign',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Campaign'),
        ),
        migrations.AlterModelTable(
            name='lineitemconversionpixel',
            table='line_item_conversion_pixel',
        ),
        migrations.AddField(
            model_name='lineitem',
            name='advertiser',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Advertiser'),
        ),
        migrations.AddField(
            model_name='lineitem',
            name='insertion_order_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.InsertionOrder'),
        ),
        migrations.AddField(
            model_name='lineitem',
            name='profile_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Profile'),
        ),
        migrations.AddField(
            model_name='insertionorderlabel',
            name='line_item',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.LineItem'),
        ),
        migrations.AddField(
            model_name='insertionorder',
            name='advertiser_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Advertiser'),
        ),
        migrations.AddField(
            model_name='impressiontracker',
            name='advertiser_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Advertiser'),
        ),
        migrations.AddField(
            model_name='impressiontracker',
            name='line_item',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.LineItem'),
        ),
        migrations.AddField(
            model_name='impressiontracker',
            name='publisher',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Publisher'),
        ),
        migrations.AddField(
            model_name='clicktracker',
            name='advertiser_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Advertiser'),
        ),
        migrations.AddField(
            model_name='clicktracker',
            name='line_item',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.LineItem'),
        ),
        migrations.AddField(
            model_name='clicktracker',
            name='publisher',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.Publisher'),
        ),
        migrations.AddField(
            model_name='labeledobject',
            name='insertion_order',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.InsertionOrder'),
        ),
        migrations.AddField(
            model_name='labeledobject',
            name='line_item',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.LineItem'),
        ),
        migrations.AddField(
            model_name='sitedomainperformancereport',
            name='line_item',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rtb.LineItem'),
        ),
    ]
