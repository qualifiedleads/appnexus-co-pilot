# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2017-03-04 23:25
from __future__ import unicode_literals

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ('rtb', '0148_auto_20170228_1530'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='uiusualplacementsgriddataall',
            name='evaluation_date',
        ),
        migrations.RemoveField(
            model_name='uiusualplacementsgriddatacurmonth',
            name='evaluation_date',
        ),
        migrations.RemoveField(
            model_name='uiusualplacementsgriddatacurmonth',
            name='window_start_date',
        ),
        migrations.RemoveField(
            model_name='uiusualplacementsgriddatalast14days',
            name='evaluation_date',
        ),
        migrations.RemoveField(
            model_name='uiusualplacementsgriddatalast14days',
            name='window_start_date',
        ),
        migrations.RemoveField(
            model_name='uiusualplacementsgriddatalast21days',
            name='evaluation_date',
        ),
        migrations.RemoveField(
            model_name='uiusualplacementsgriddatalast21days',
            name='window_start_date',
        ),
        migrations.RemoveField(
            model_name='uiusualplacementsgriddatalast3days',
            name='evaluation_date',
        ),
        migrations.RemoveField(
            model_name='uiusualplacementsgriddatalast3days',
            name='window_start_date',
        ),
        migrations.RemoveField(
            model_name='uiusualplacementsgriddatalast7days',
            name='evaluation_date',
        ),
        migrations.RemoveField(
            model_name='uiusualplacementsgriddatalast7days',
            name='window_start_date',
        ),
        migrations.RemoveField(
            model_name='uiusualplacementsgriddatalast90days',
            name='evaluation_date',
        ),
        migrations.RemoveField(
            model_name='uiusualplacementsgriddatalast90days',
            name='window_start_date',
        ),
        migrations.RemoveField(
            model_name='uiusualplacementsgriddatalastmonth',
            name='evaluation_date',
        ),
        migrations.RemoveField(
            model_name='uiusualplacementsgriddatalastmonth',
            name='window_start_date',
        ),
        migrations.RemoveField(
            model_name='uiusualplacementsgriddatayesterday',
            name='evaluation_date',
        ),
        migrations.RemoveField(
            model_name='uiusualplacementsgriddatayesterday',
            name='window_start_date',
        ),

        migrations.RunSQL("delete from ui_usual_placements_grid_data_all"),

        migrations.RunSQL("""
        insert into ui_usual_placements_grid_data_all as ut (
    campaign_id,
    placement_id,
    imps,
    clicks,
    spent,
    conversions,
    imps_viewed,
    view_measured_imps,
    cpm,
    cvr,
    ctr,
    cpc,
    cpa,
    view_measurement_rate,
    view_rate)
  select
    t.campaign_id,
    t.placement_id as id,
    sum(t.imps) imps,
    sum(t.clicks) clicks,
    sum(t."cost") spend,
    sum(t.total_convs) conversions,
    sum(t.imps_viewed) imps_viewed,
    sum(t.view_measured_imps) view_measured_imps,
    case sum(t.imps) when 0 then 0 else sum(t."cost") / sum(t.imps) * 1000.0 end cpm,
    case sum(t.imps) when 0 then 0 else sum(t.total_convs)::float / sum(t.imps) end cvr,
    case sum(t.imps) when 0 then 0 else sum(t.clicks)::float / sum(t.imps) end ctr,
    case sum(t.clicks) when 0 then 0 else sum(t."cost") / sum(t.clicks) end cpc,
    case sum(t.total_convs) when 0 then 0 else sum(t."cost") / sum(t.total_convs) end cpa,
    case sum(t.imps) when 0 then 0 else sum(t.view_measured_imps)::float / sum(t.imps) end view_measurement_rate,
    case sum(t.view_measured_imps) when 0 then 0 else sum(t.imps_viewed)::float / sum(t.view_measured_imps) end view_rate
  from
    network_analytics_report_by_placement t
  where
    t."hour" >= '1970-01-01 00:00:00' and t."hour" <= current_timestamp::timestamp without time zone
  group by
    t.campaign_id, t.placement_id
            """),

        migrations.RunSQL("delete from ui_usual_placements_grid_data_yesterday"),

        migrations.RunSQL("""
            insert into ui_usual_placements_grid_data_yesterday as ut (
        campaign_id,
        placement_id,
        imps,
        clicks,
        spent,
        conversions,
        imps_viewed,
        view_measured_imps,
        cpm,
        cvr,
        ctr,
        cpc,
        cpa,
        view_measurement_rate,
        view_rate)
      select
        t.campaign_id,
        t.placement_id as id,
        sum(t.imps) imps,
        sum(t.clicks) clicks,
        sum(t."cost") spend,
        sum(t.total_convs) conversions,
        sum(t.imps_viewed) imps_viewed,
        sum(t.view_measured_imps) view_measured_imps,
        case sum(t.imps) when 0 then 0 else sum(t."cost") / sum(t.imps) * 1000.0 end cpm,
        case sum(t.imps) when 0 then 0 else sum(t.total_convs)::float / sum(t.imps) end cvr,
        case sum(t.imps) when 0 then 0 else sum(t.clicks)::float / sum(t.imps) end ctr,
        case sum(t.clicks) when 0 then 0 else sum(t."cost") / sum(t.clicks) end cpc,
        case sum(t.total_convs) when 0 then 0 else sum(t."cost") / sum(t.total_convs) end cpa,
        case sum(t.imps) when 0 then 0 else sum(t.view_measured_imps)::float / sum(t.imps) end view_measurement_rate,
        case sum(t.view_measured_imps) when 0 then 0 else sum(t.imps_viewed)::float / sum(t.view_measured_imps) end view_rate
      from
        network_analytics_report_by_placement t
      where
        t."hour" >= date_trunc('day',current_timestamp::timestamp without time zone - interval '1 day')
        and t."hour" <= current_timestamp::timestamp without time zone
      group by
        t.campaign_id, t.placement_id
                """),

        migrations.RunSQL("delete from ui_usual_placements_grid_data_last_3_days"),

        migrations.RunSQL("""
                insert into ui_usual_placements_grid_data_last_3_days as ut (
            campaign_id,
            placement_id,
            imps,
            clicks,
            spent,
            conversions,
            imps_viewed,
            view_measured_imps,
            cpm,
            cvr,
            ctr,
            cpc,
            cpa,
            view_measurement_rate,
            view_rate)
          select
            t.campaign_id,
            t.placement_id as id,
            sum(t.imps) imps,
            sum(t.clicks) clicks,
            sum(t."cost") spend,
            sum(t.total_convs) conversions,
            sum(t.imps_viewed) imps_viewed,
            sum(t.view_measured_imps) view_measured_imps,
            case sum(t.imps) when 0 then 0 else sum(t."cost") / sum(t.imps) * 1000.0 end cpm,
            case sum(t.imps) when 0 then 0 else sum(t.total_convs)::float / sum(t.imps) end cvr,
            case sum(t.imps) when 0 then 0 else sum(t.clicks)::float / sum(t.imps) end ctr,
            case sum(t.clicks) when 0 then 0 else sum(t."cost") / sum(t.clicks) end cpc,
            case sum(t.total_convs) when 0 then 0 else sum(t."cost") / sum(t.total_convs) end cpa,
            case sum(t.imps) when 0 then 0 else sum(t.view_measured_imps)::float / sum(t.imps) end view_measurement_rate,
            case sum(t.view_measured_imps) when 0 then 0 else sum(t.imps_viewed)::float / sum(t.view_measured_imps) end view_rate
          from
            network_analytics_report_by_placement t
          where
            t."hour" >= date_trunc('day',current_timestamp::timestamp without time zone - interval '3 day')
            and t."hour" <= current_timestamp::timestamp without time zone
          group by
            t.campaign_id, t.placement_id
                    """),

        migrations.RunSQL("delete from ui_usual_placements_grid_data_last_7_days"),

        migrations.RunSQL("""
                insert into ui_usual_placements_grid_data_last_7_days as ut (
            campaign_id,
            placement_id,
            imps,
            clicks,
            spent,
            conversions,
            imps_viewed,
            view_measured_imps,
            cpm,
            cvr,
            ctr,
            cpc,
            cpa,
            view_measurement_rate,
            view_rate)
          select
            t.campaign_id,
            t.placement_id as id,
            sum(t.imps) imps,
            sum(t.clicks) clicks,
            sum(t."cost") spend,
            sum(t.total_convs) conversions,
            sum(t.imps_viewed) imps_viewed,
            sum(t.view_measured_imps) view_measured_imps,
            case sum(t.imps) when 0 then 0 else sum(t."cost") / sum(t.imps) * 1000.0 end cpm,
            case sum(t.imps) when 0 then 0 else sum(t.total_convs)::float / sum(t.imps) end cvr,
            case sum(t.imps) when 0 then 0 else sum(t.clicks)::float / sum(t.imps) end ctr,
            case sum(t.clicks) when 0 then 0 else sum(t."cost") / sum(t.clicks) end cpc,
            case sum(t.total_convs) when 0 then 0 else sum(t."cost") / sum(t.total_convs) end cpa,
            case sum(t.imps) when 0 then 0 else sum(t.view_measured_imps)::float / sum(t.imps) end view_measurement_rate,
            case sum(t.view_measured_imps) when 0 then 0 else sum(t.imps_viewed)::float / sum(t.view_measured_imps) end view_rate
          from
            network_analytics_report_by_placement t
          where
            t."hour" >= date_trunc('day',current_timestamp::timestamp without time zone - interval '7 day')
            and t."hour" <= current_timestamp::timestamp without time zone
          group by
            t.campaign_id, t.placement_id
                    """),

        migrations.RunSQL("delete from ui_usual_placements_grid_data_last_14_days"),

        migrations.RunSQL("""
                insert into ui_usual_placements_grid_data_last_14_days as ut (
            campaign_id,
            placement_id,
            imps,
            clicks,
            spent,
            conversions,
            imps_viewed,
            view_measured_imps,
            cpm,
            cvr,
            ctr,
            cpc,
            cpa,
            view_measurement_rate,
            view_rate)
          select
            t.campaign_id,
            t.placement_id as id,
            sum(t.imps) imps,
            sum(t.clicks) clicks,
            sum(t."cost") spend,
            sum(t.total_convs) conversions,
            sum(t.imps_viewed) imps_viewed,
            sum(t.view_measured_imps) view_measured_imps,
            case sum(t.imps) when 0 then 0 else sum(t."cost") / sum(t.imps) * 1000.0 end cpm,
            case sum(t.imps) when 0 then 0 else sum(t.total_convs)::float / sum(t.imps) end cvr,
            case sum(t.imps) when 0 then 0 else sum(t.clicks)::float / sum(t.imps) end ctr,
            case sum(t.clicks) when 0 then 0 else sum(t."cost") / sum(t.clicks) end cpc,
            case sum(t.total_convs) when 0 then 0 else sum(t."cost") / sum(t.total_convs) end cpa,
            case sum(t.imps) when 0 then 0 else sum(t.view_measured_imps)::float / sum(t.imps) end view_measurement_rate,
            case sum(t.view_measured_imps) when 0 then 0 else sum(t.imps_viewed)::float / sum(t.view_measured_imps) end view_rate
          from
            network_analytics_report_by_placement t
          where
            t."hour" >= date_trunc('day',current_timestamp::timestamp without time zone - interval '14 day')
            and t."hour" <= current_timestamp::timestamp without time zone
          group by
            t.campaign_id, t.placement_id
                    """),

        migrations.RunSQL("delete from ui_usual_placements_grid_data_last_21_days"),

        migrations.RunSQL("""
                insert into ui_usual_placements_grid_data_last_21_days as ut (
            campaign_id,
            placement_id,
            imps,
            clicks,
            spent,
            conversions,
            imps_viewed,
            view_measured_imps,
            cpm,
            cvr,
            ctr,
            cpc,
            cpa,
            view_measurement_rate,
            view_rate)
          select
            t.campaign_id,
            t.placement_id as id,
            sum(t.imps) imps,
            sum(t.clicks) clicks,
            sum(t."cost") spend,
            sum(t.total_convs) conversions,
            sum(t.imps_viewed) imps_viewed,
            sum(t.view_measured_imps) view_measured_imps,
            case sum(t.imps) when 0 then 0 else sum(t."cost") / sum(t.imps) * 1000.0 end cpm,
            case sum(t.imps) when 0 then 0 else sum(t.total_convs)::float / sum(t.imps) end cvr,
            case sum(t.imps) when 0 then 0 else sum(t.clicks)::float / sum(t.imps) end ctr,
            case sum(t.clicks) when 0 then 0 else sum(t."cost") / sum(t.clicks) end cpc,
            case sum(t.total_convs) when 0 then 0 else sum(t."cost") / sum(t.total_convs) end cpa,
            case sum(t.imps) when 0 then 0 else sum(t.view_measured_imps)::float / sum(t.imps) end view_measurement_rate,
            case sum(t.view_measured_imps) when 0 then 0 else sum(t.imps_viewed)::float / sum(t.view_measured_imps) end view_rate
          from
            network_analytics_report_by_placement t
          where
            t."hour" >= date_trunc('day',current_timestamp::timestamp without time zone - interval '21 day')
            and t."hour" <= current_timestamp::timestamp without time zone
          group by
            t.campaign_id, t.placement_id
                    """),

        migrations.RunSQL("delete from ui_usual_placements_grid_data_last_90_days"),

        migrations.RunSQL("""
                insert into ui_usual_placements_grid_data_last_90_days as ut (
            campaign_id,
            placement_id,
            imps,
            clicks,
            spent,
            conversions,
            imps_viewed,
            view_measured_imps,
            cpm,
            cvr,
            ctr,
            cpc,
            cpa,
            view_measurement_rate,
            view_rate)
          select
            t.campaign_id,
            t.placement_id as id,
            sum(t.imps) imps,
            sum(t.clicks) clicks,
            sum(t."cost") spend,
            sum(t.total_convs) conversions,
            sum(t.imps_viewed) imps_viewed,
            sum(t.view_measured_imps) view_measured_imps,
            case sum(t.imps) when 0 then 0 else sum(t."cost") / sum(t.imps) * 1000.0 end cpm,
            case sum(t.imps) when 0 then 0 else sum(t.total_convs)::float / sum(t.imps) end cvr,
            case sum(t.imps) when 0 then 0 else sum(t.clicks)::float / sum(t.imps) end ctr,
            case sum(t.clicks) when 0 then 0 else sum(t."cost") / sum(t.clicks) end cpc,
            case sum(t.total_convs) when 0 then 0 else sum(t."cost") / sum(t.total_convs) end cpa,
            case sum(t.imps) when 0 then 0 else sum(t.view_measured_imps)::float / sum(t.imps) end view_measurement_rate,
            case sum(t.view_measured_imps) when 0 then 0 else sum(t.imps_viewed)::float / sum(t.view_measured_imps) end view_rate
          from
            network_analytics_report_by_placement t
          where
            t."hour" >= date_trunc('day',current_timestamp::timestamp without time zone - interval '90 day')
            and t."hour" <= current_timestamp::timestamp without time zone
          group by
            t.campaign_id, t.placement_id
                    """),

        migrations.RunSQL("delete from ui_usual_placements_grid_data_last_month"),

        migrations.RunSQL("""
                insert into ui_usual_placements_grid_data_last_month as ut (
            campaign_id,
            placement_id,
            imps,
            clicks,
            spent,
            conversions,
            imps_viewed,
            view_measured_imps,
            cpm,
            cvr,
            ctr,
            cpc,
            cpa,
            view_measurement_rate,
            view_rate)
          select
            t.campaign_id,
            t.placement_id as id,
            sum(t.imps) imps,
            sum(t.clicks) clicks,
            sum(t."cost") spend,
            sum(t.total_convs) conversions,
            sum(t.imps_viewed) imps_viewed,
            sum(t.view_measured_imps) view_measured_imps,
            case sum(t.imps) when 0 then 0 else sum(t."cost") / sum(t.imps) * 1000.0 end cpm,
            case sum(t.imps) when 0 then 0 else sum(t.total_convs)::float / sum(t.imps) end cvr,
            case sum(t.imps) when 0 then 0 else sum(t.clicks)::float / sum(t.imps) end ctr,
            case sum(t.clicks) when 0 then 0 else sum(t."cost") / sum(t.clicks) end cpc,
            case sum(t.total_convs) when 0 then 0 else sum(t."cost") / sum(t.total_convs) end cpa,
            case sum(t.imps) when 0 then 0 else sum(t.view_measured_imps)::float / sum(t.imps) end view_measurement_rate,
            case sum(t.view_measured_imps) when 0 then 0 else sum(t.imps_viewed)::float / sum(t.view_measured_imps) end view_rate
          from
            network_analytics_report_by_placement t
          where
            t."hour" >= date_trunc('month',current_timestamp::timestamp without time zone - interval '1 month')
            and t."hour" < date_trunc('month',current_timestamp::timestamp without time zone)
          group by
            t.campaign_id, t.placement_id
                    """),

        migrations.RunSQL("delete from ui_usual_placements_grid_data_cur_month"),

        migrations.RunSQL("""
                insert into ui_usual_placements_grid_data_cur_month as ut (
            campaign_id,
            placement_id,
            imps,
            clicks,
            spent,
            conversions,
            imps_viewed,
            view_measured_imps,
            cpm,
            cvr,
            ctr,
            cpc,
            cpa,
            view_measurement_rate,
            view_rate)
          select
            t.campaign_id,
            t.placement_id as id,
            sum(t.imps) imps,
            sum(t.clicks) clicks,
            sum(t."cost") spend,
            sum(t.total_convs) conversions,
            sum(t.imps_viewed) imps_viewed,
            sum(t.view_measured_imps) view_measured_imps,
            case sum(t.imps) when 0 then 0 else sum(t."cost") / sum(t.imps) * 1000.0 end cpm,
            case sum(t.imps) when 0 then 0 else sum(t.total_convs)::float / sum(t.imps) end cvr,
            case sum(t.imps) when 0 then 0 else sum(t.clicks)::float / sum(t.imps) end ctr,
            case sum(t.clicks) when 0 then 0 else sum(t."cost") / sum(t.clicks) end cpc,
            case sum(t.total_convs) when 0 then 0 else sum(t."cost") / sum(t.total_convs) end cpa,
            case sum(t.imps) when 0 then 0 else sum(t.view_measured_imps)::float / sum(t.imps) end view_measurement_rate,
            case sum(t.view_measured_imps) when 0 then 0 else sum(t.imps_viewed)::float / sum(t.view_measured_imps) end view_rate
          from
            network_analytics_report_by_placement t
          where
            t."hour" >= date_trunc('month',current_timestamp::timestamp without time zone)
            and t."hour" <= current_timestamp::timestamp without time zone
          group by
            t.campaign_id, t.placement_id
                    """),
    ]
